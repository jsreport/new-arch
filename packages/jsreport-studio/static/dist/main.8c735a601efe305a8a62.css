
.FileInput-selectInput {
  cursor: pointer;
  font-size: 0.9rem;
  background-color: $controls-backgroundColor;
  border-bottom: solid 0.2rem $controls-borderColor;
  transition: border 0.3s;
  padding: 0.5rem;
  width: 100%;
  display: flex;
  color: $controls-color;
  margin-top: 2px;
}

.FileInput-selectInput:hover, .FileInput-selectInput:focus, .FileInput-selectInput:active {
  border-bottom: solid 0.2rem $controls-hover-borderColor;
}

.FileInput-selectInput > i {
  margin-top: 0.1rem;
  vertical-align: middle;
}

.FileInput-selectInput > i:hover {
  color: $controls-hover-borderColor;
}

.FileInput-selectInput > span {
  margin-left: 0.5rem;
  white-space: nowrap;
  overflow-x: hidden;
  vertical-align: middle;
}

.FileInput-selectInput > span.FileInput-link:hover {
  margin-left: 0.5rem;
  color: $controls-hover-borderColor;
  text-decoration: underline;
}

.FileInput-nameLabel {
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}


.Preview-previewContainer {
  display: flex;
  flex: 1 1;
  flex-direction: column;
  background-color: $preview-backgroundColor;
}

.Preview-previewTitles {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  background-color: $tab-titles-backgroundColor;
  border-bottom: 0.2rem $tab-titles-borderColor solid;
  padding-top: 0.1rem;
  min-height: 2.0rem;
}

.Preview-previewTitle {
  position: relative;
  flex: 0 1;
  /*flexbox workaround some browsers (mostly Safari) needs to have some properties defined explicitly to handle auto sizing correctly*/
  flex-basis: auto;
  flex-shrink: 0;
  /*end flexbox workaround*/
  min-height: 1.7rem;
  white-space: nowrap;
  display:flex;
  background-color: $tab-title-backgroundColor;
  padding: 0.3rem 0.9rem 0.3rem 0.9rem;
  border-right: 1px $tab-title-borderColor solid;
  cursor: pointer;
  font-size: 0.9rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Preview-previewTitle.Preview-active {
  background: $tab-title-active-backgroundColor;
  color: $tab-title-active-color;
}

.Preview-previewTitle:hover {
  background: $tab-title-hover-backgroundColor;
  color: $tab-title-hover-color;
}

.Preview-previewTitleIcon {
  font-size: 0.9em;
  margin-right: 2px;
}

.Preview-previewDisplayContainer {
  background-color: $preview-backgroundColor;
  color: $preview-color;
}

.Preview-previewDisplayContainerDefaultBackground {
  /* emulates default background, color of browser */
  background-color: #fff;
  color: #000;
}

.Preview-profilerOperations {
  width: 100%;
  height: 100%;
}

.Preview-profilerOperations .react-flow__edge-text {
  fill: $primary-color;
}

.Preview-profilerOperations .react-flow__node-default,
.Preview-profilerOperations .react-flow__edge-text {
  font-size: 12px;
}

.Preview-profilerOperations.Preview-globalError .react-flow__renderer,
.Preview-profilerOperations.Preview-globalError .react-flow__controls {
  opacity: 0.4;
}

.Preview-profilerOperationsGlobalError {
  color: #ff0000;
}

.Preview-profilerOperationsControls {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 5;
}

.Preview-profilerButtonAction {
  cursor: pointer;
  font-size: 0.8rem;
  padding-left: 0.6rem;
  padding-right: 0.6rem;
}

.Preview-profilerStartNode {
  cursor: pointer !important;
  width: 35px !important;
  border-radius: 50% !important;
}

.Preview-profilerStartNodeLabel {
  margin-right: -2px;
}

.Preview-profilerOperationNode {
  cursor: pointer !important;
  border-radius: 1px !important;
}

.Preview-profilerEndNode {
  width: 70px !important;
  border-radius: 50% !important;
}

.Preview-profilerEndNode.Preview-renderError {
  width: 35px !important;
}

.Preview-profilerEndNodeLabel {
  font-size: 1rem;
  color: #ff0000;
}

.Preview-profilerStartNode .react-flow__handle,
.Preview-profilerOperationNode .react-flow__handle {
  opacity: 0 !important;
}

.Preview-profilerOperationNode.Preview-active {
  outline: 2px solid $primary-selection-backgroundColor;
}

.Preview-profilerOperationNode.Preview-running {
  -webkit-animation: Preview-runningBlinker 0.7s linear infinite;
          animation: Preview-runningBlinker 0.7s linear infinite;
}

.Preview-profilerOperationNode.Preview-error {
  border: 1px solid #ff0000;
}

.Preview-profilerOperationNode.Preview-error:before {
  content: "";
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  background-color: #ff0000;
  opacity: 0.7;
  z-index: -1;
}

@-webkit-keyframes Preview-runningBlinker {
  50% {
    opacity: 0.3;
  }
}

@keyframes Preview-runningBlinker {
  50% {
    opacity: 0.3;
  }
}

#react-flow__arrowclosed-active > * {
  stroke: $primary-selection-backgroundColor !important;
  fill: $primary-selection-backgroundColor !important;
}

.Preview-profilerOperationEdge .react-flow__edge-path {
  cursor: pointer;
  stroke-width: 2;
}

.Preview-profilerOperationEdge .Preview-profilerOperationEdgeExpander {
  stroke-width: 40;
  stroke-opacity: 0;
}

.Preview-profilerOperationEdge.Preview-active .Preview-main {
  stroke: $primary-selection-backgroundColor !important;
  marker-end: url("#react-flow__arrowclosed-active") !important;
}

.Preview-profilerLogs {
  width: 100%;
  overflow: auto;
  height: 100%;
  padding-left: 0.4rem;
  padding-right: 0.4rem;
}

.Preview-profilerLogItem {
  display: flex;
  font-size: 0.9rem;
  margin-bottom: 0.2rem;
  align-items: baseline;
  border-bottom: 1px dashed transparent;
}

.Preview-profilerLogItem:last-child {
  margin-bottom: 0;
}

.Preview-profilerLogItem.Preview-notActive {
  opacity: 0.6;
}

.Preview-profilerLogItem.Preview-active {
  opacity: 1;
  border-bottom: 1px dashed $primary-selection-backgroundColor;
}

.Preview-profilerLogItemLevel {
  min-width: 3.2em;
  max-width: 3.2em;
  margin-right: 0.3rem;
}

.Preview-profilerLogItemTime {
  font-size: 0.8em;
  min-width: 3.6em;
  max-width: 3.6em;
  margin-right: 0.5rem;
}

.Preview-profilerLogItemMessage {
  flex-grow: 1;
  word-break: break-all;
  white-space: break-spaces;
}

.Preview-profilerLogItemLevel,
.Preview-profilerLogItemTime {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.Preview-profilerLogItemLevel,
.Preview-profilerLogItemTime,
.Preview-profilerLogItemMessage {
  font-family: monospace;
}

.Preview-profilerReqResButtons {
  cursor: default;
  position: absolute;
  padding: 0.3rem;
  border-radius: 5px;
  border: 1px solid #000;
  background: #fff;
  min-width: 100px;
}

.Preview-profilerExecutionTime {
  position: absolute;
  left: 50%;
  bottom: calc(-50% - 5px);
}

.Preview-profilerExecutionTimeCover {
  position: absolute;
  left: 0;
  right: 0;
  bottom: calc(-50% - 5px);
}

.Preview-profilerExecutionTimeLabel {
  display: inline-block;
  color: $primary-color;
  transform: translateX(-50%);
  text-shadow: -1px 0 $primary-backgroundColor, 0 1px $primary-backgroundColor, 1px 0 $primary-backgroundColor, 0 -1px $primary-backgroundColor;
}

.Preview-profilerExecutionTimeCost {
  position: absolute;
  left: 0;
  right: 0;
  bottom: calc(-50% - 5px);
}

.Preview-profilerExecutionTimeCost.Preview-low {
  background-color: #22b14c;
  opacity: 0.8;
}

.Preview-profilerExecutionTimeCost.Preview-medium {
  background-color: #f9e127;
  opacity: 0.8;
}

.Preview-profilerExecutionTimeCost.Preview-high {
  background-color: #fa7f27;
  opacity: 0.8;
}


.ProfilerErrorModal-errorContainer {
  max-width: 650px;
  max-height: 500px;
  overflow: auto;
}

.ProfilerErrorModal-errorMessage,
.ProfilerErrorModal-errorStack {
  word-break: break-all;
  white-space: break-spaces;
}


.EntityTreeBox-boxContainer {
  flex: 1 1;
  background-color: $entityTree-backgroundColor;
  display: flex;
  flex-direction: column;
  /*firefox needs min-height and min-width explicitly declared to allow descendants flex items to be scrollable (overflow)*/
  min-height: 0;
  min-width: 0;
}


.EntityTreeButton-entityTreeButton {
  background-color: $entityTree-button-backgroundColor;
  border: none;
  color: $entityTree-button-color;
  cursor: pointer;
  padding: 0.2rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border: 0.1rem solid $entityTree-button-borderColor;
  font-size: 0.75rem;
}

.EntityTreeButton-entityTreeButton:hover {
  background-color: $entityTree-button-hover-backgroundColor;
  color: $entityTree-button-hover-color;
}

.EntityTreeButton-entityTreeButton.EntityTreeButton-active {
  border: 0.1rem solid $entityTree-button-active-borderColor;
}


.EntityTree-treeListContainer {
  flex: 1 1;
  background-color: $entityTree-backgroundColor;
  color: $entityTree-color;
  display: flex;
  flex-direction: column;
  /*firefox needs min-height and min-width explicitly declared to allow descendants flex items to be scrollable (overflow)*/
  min-height: 0;
  min-width: 0;
  height: 100%;
}

.EntityTree-treeListContainer.EntityTree-dragging {

}

.EntityTree-toolbar {
  padding: 0.3rem;
}

.EntityTree-toolbarGroup {
  display: inline-block;
  margin-left: 0.2rem;
  margin-right: 0.2rem;
}

.EntityTree-nodeBox {
  flex: 1 1;
}

.EntityTree-nodeBoxItem {
  margin-top: 0;
}

.EntityTree-nodeBoxItemContent {
  display: inline-block;
  outline: 1px dashed transparent;
  outline-offset: 1px;
  opacity: 1;
  margin-left: 0.2rem;
}

.EntityTree-nodeBoxItemContent.EntityTree-dragging,
.EntityTree-nodeContainer.EntityTree-dragging .EntityTree-nodeBoxItemContent {
  opacity: 0.5;
}

.EntityTree-nodeBoxItemContent.EntityTree-dragging {
  outline-color: $entityTree-outlineColor;
}

.EntityTree-nodesBox {
  flex: 1 1;
  height: auto;
  overflow: auto;
  position: relative;
  width: auto;
  /*gives a little bit of space to show hierarchy*/
  /*highlight when dragging over the root*/
  padding-top: 4px;
}

.EntityTree-nodeTitle {
  font-size: 0.9rem;
  cursor: pointer;
  width: 0.2rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.EntityTree-nodeTitle:before {
  font-size: 1rem;
  font-family: FontAwesome;
  color: $entityTree-collapseIcon-collapsed-color;
}

.EntityTree-nodeTitle:not(.EntityTree-collapsed):before {
  content: "\f0da";
  transform: rotateZ(45deg);
  display: inline-block;
  margin-right: 0.3rem;
  color: $entityTree-collapseIcon-color;
}

.EntityTree-nodeTitle.EntityTree-collapsed:before {
  content: "\f0da";
  display: inline-block;
  margin-right: 0.3rem;
}

.EntityTree-nodeTitle:hover:before {
  color: $entityTree-collapseIcon-hover-color;
}

.EntityTree-nodeContainer:not(.EntityTree-collapsed) {
  max-height: 15999px;
  transition: 0.15s;
}

.EntityTree-nodeContainer.EntityTree-collapsed {
  max-height: 0;
  overflow: hidden;
  transition: 0.15s;
}

.EntityTree-link {
  padding: 0.3rem;
  padding-left: 1.5rem;
  font-size: 0.9rem;
  cursor: pointer;
}

.EntityTree-link.EntityTree-active {
  background: $entityTree-node-active-backgroundColor;
  color: $entityTree-node-active-color;
}

.EntityTree-link:hover, .EntityTree-link.EntityTree-focused {
  background: $entityTree-node-hover-backgroundColor;
  color: $entityTree-node-hover-color;
}

.EntityTree-treeListContainer.EntityTree-dragging .EntityTree-link:hover {
  background: inherit;
  color: inherit;
}

.EntityTree-link.EntityTree-dragging {
  background-color: inherit;
  color: inherit;
}

.EntityTree-entityIcon {
  margin-right: 0.4rem;
  width: 0.9rem;
  color: $entityIcon-color;
}

.EntityTree-entityDefaultIcon:after {
  font-family: FontAwesome;
  content: "\f1fe";
}

.EntityTree-add {
  cursor: pointer;
}

.EntityTree-add:after {
  content: "\f067";
  font-family: FontAwesome;
  color: $entityTree-icon-color;
  padding: 0.1rem;
  font-size: 1rem;
}

.EntityTree-add:hover:after {
  color: $entityTree-icon-hover-color;
}

.EntityTree-help {
  cursor: pointer;
  text-decoration: none;
}

.EntityTree-help:after {
  content: "\f128";
  font-family: FontAwesome;
  color: $entityTree-icon-color;
  padding: 0.1rem;
  font-size: 1rem;
  visibility: hidden;
}

.EntityTree-nodeBox:hover .EntityTree-help:after {
  visibility: visible;
}

.EntityTree-help:hover:after {
  color: $entityTree-icon-hover-color;
}

.EntityTree-contextMenu {
  background-color: $contextMenu-backgroundColor;
  position: relative;
  min-width: 9rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  z-index: 200;
  box-shadow: 0.1rem 0.1rem 0.1rem 0.05rem rgba(0, 0, 0, 0.6);
}

.EntityTree-contextMenuContainer {
  position: absolute;
  z-index: 9999999;
}

.EntityTree-contextMenuContainer.EntityTree-nestedLevel {
  position: absolute;
  top: 0;
  left: 100%;
  transition: opacity;
  transition-delay: 0.2s;
  opacity: 0;
  height: 0;
  overflow: hidden;
}

.EntityTree-contextButton {
  position: relative;
  color: $contextMenu-button-color;
  padding: 0.5rem 1rem 0.5rem 1rem;
  font-size: 0.8rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.EntityTree-contextButton i {
  width: 0.8rem;
  margin-right: 0.6rem;
  display: inline-block;
}

.EntityTree-contextButton.EntityTree-disabled {
  color: $contextMenu-button-disabled-color;
}

.EntityTree-contextButton.EntityTree-hasNestedLevels:after {
  font-family: FontAwesome;
  font-size: 0.9rem;
  padding-right: 0.5rem;
  content: "\f0da";
  position: absolute;
  right: 0;
}

.EntityTree-contextButton:hover:not(.EntityTree-disabled) {
  background-color: $contextMenu-button-hover-backgroundColor;
  color: $contextMenu-button-hover-color;
}

.EntityTree-contextButton.EntityTree-hasNestedLevels:hover > .EntityTree-contextMenuContainer.EntityTree-nestedLevel {
  opacity: 1;
  height: auto;
  overflow: visible;
}


.HighlightedArea-label {
  background-color: $entityTree-highlight-color;
  border-radius: 2px;
  position: absolute;
  pointer-events: none;
  opacity: 0.4;
}

.HighlightedArea-hierarchy {
  border-left: 1px dotted $entityTree-highlight-color;
  border-top: 1px dotted $entityTree-highlight-color;
  border-bottom: 1px dotted $entityTree-highlight-color;
  position: absolute;
  pointer-events: none;
}

.HighlightedArea-hierarchyTop {
  background-color: $entityTree-highlight-color;
  border-radius: 100%;
  height: 5px;
  position: absolute;
  right: 0px;
  top: -2.5px;
  width: 5px;
}

.HighlightedArea-hierarchyBottom {
  background-color: $entityTree-highlight-color;
  border-radius: 100%;
  bottom: -2.5px;
  height: 5px;
  position: absolute;
  right: 0px;
  width: 5px;
}


.Properties-propertiesPanel {
  flex: 1 1;
  display: flex;
  flex-direction: column;
  background-color: $property-panel-backgroundColor;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  width: 100%;
}

.Properties-title {
  background-color: $property-heading-backgroundColor;
  color: $property-heading-color;
  min-height: 1.7rem;
  font-size: 0.9rem;
  padding: 0.3rem;
}

.Properties-propertiesContainer {
  overflow: auto;
}

.Properties-propertyTitle {
  cursor: pointer;
  padding: 0.5rem 0.5rem 0.5rem 1.2rem;
  background-color: $property-title-backgroundColor;
  color: $property-title-color;
}

.Properties-propertyTitle.Properties-expanded {
  background-color: $property-title-expanded-backgroundColor;
  color: $property-title-expanded-color;
}

.Properties-propertyTitle:hover {
  background-color: $property-title-hover-backgroundColor;
  color: $property-title-hover-color;
}

.Properties-propertyBox {
  margin: 0.3rem 0.3rem;
  min-width: 9rem;
}

.Properties-propertyContentBox {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s;
}

.Properties-propertyContentBox.Properties-expanded {
  max-height: 95rem;
}

.properties-section {
  box-shadow: 0 0.1rem 0.1rem 0 rgba(0, 0, 0, 0.2);
  border-radius: 0.1rem;
  padding-bottom: 0.5rem;
}

.Properties-propertiesNodes {
  padding: 0.5em;
  overflow: auto;
  flex-direction: column;
  display: flex;
}

.App-appContent {
  flex: 1 1;
}

.App-navbar {
  width: 100%;
  position: fixed;
  z-index: 99;
  background: deepskyblue;
  padding: 1em;
}

.App-nav-link {
  color: white;
  text-decoration: none;
  padding: 1em;
}

.App-properties {
  background-color: red;
}


.EntityFuzzyFinderModal-container {
  margin: 0;
  width: 560px;
  height: 280px;
  overflow: hidden;
}

.EntityFuzzyFinderModal-input {
  width: 100%;
  padding-top: 0.7rem;
  box-shadow: $entityFinder-input-shadowColor 0px 1px 5px 2px;
}

.EntityFuzzyFinderModal-input:hover, .EntityFuzzyFinderModal-input:focus, .EntityFuzzyFinderModal-input:active {
  border-bottom: solid 0.2rem $entityFinder-input-hover-borderColor !important;
}

.EntityFuzzyFinderModal-results {
  border-width: 0px 0px 1px;
  box-shadow: $entityFinder-results-shadowColor 0px 12px 30px 2px;
  border-top-style: initial;
  border-right-style: solid;
  border-bottom-style: solid;
  border-left-style: solid;
  border-top-color: initial;
  border-right-color: $entityFinder-results-borderColor;
  border-bottom-color: $entityFinder-results-borderColor;
  border-left-color: $entityFinder-results-borderColor;
  -o-border-image: initial;
     border-image: initial;
  font-size: 0.8rem;
  margin: 0px;
  max-height: 250px;
  width: 100%;
  overflow: auto;
  position: relative;
}

.EntityFuzzyFinderModal-resultsItem {
  position: relative;
  padding: 0.6rem;
  border-top: 1px solid $entityFinder-results-borderColor;
  cursor: pointer;
}

.EntityFuzzyFinderModal-resultsItem::after {
  content: "";
  clear: both;
  display: table;
}

.EntityFuzzyFinderModal-resultsItem.EntityFuzzyFinderModal-active {
  background-color: $entityFinder-results-item-active-backgroundColor;
  color: $entityFinder-results-item-active-color;
}

.EntityFuzzyFinderModal-resultsItemIcon {
  margin-right: 0.2rem;
  width: 0.9rem;
  color: $entityIcon-color;
}

.EntityFuzzyFinderModal-resultsItemDefaultIcon:after {
  font-family: FontAwesome;
  content: "\f1fe";
}

.EntityFuzzyFinderModal-resultsItemPath {
  float: right;
  opacity: 0.5;
}

.EntityFuzzyFinderModal-emptyResults {
  opacity: 0.5;
}


.Toolbar-toolbar {
  background-color: $toolbar-backgroundColor;
  color: $toolbar-color;
  display: flex;
  align-items: center;
  min-height: 2.5rem;
}

.toolbar-button {
  padding: 0.7rem;
  font-size: 1rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.toolbar-button .fa {
  margin-right: 0.4em;
}

.toolbar-button.disabled {
  color: $toolbar-button-disabled-color;
}

.toolbar-button:hover:not(.disabled) {
  background: $toolbar-button-hover-backgroundColor;
  color: $toolbar-button-hover-color;
}

.Toolbar-run:before {
  content: "\f04b";
  font-family: FontAwesome;
}

.Toolbar-save:before {
  content: "\f0c7";
  font-family: FontAwesome;
}

.Toolbar-saveAll:before {
  content: "\f0c7";
  font-family: FontAwesome;
}

.Toolbar-spinner {
  flex: 1 1;
  color: $formPrimary-color;
  font-size: 1.5rem;
}

.Toolbar-spinner > i {
}

.Toolbar-delete:before {
  content: "\f014";
  font-family: FontAwesome;
}

.Toolbar-logo {
  background: linear-gradient(to left, $toolbar-backgroundColor 0%, $toolbar-target-backgroundColor 100%);
  background-size: auto 100%;
  background-repeat: no-repeat;
  padding-left: 0.2rem;
  padding-right: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  cursor: pointer;
  height: 2.5rem;
}

.popup-settings {
  background-color: $toolbar-popup-backgroundColor;
  color: $toolbar-color;
  position: absolute;
  padding: 0.5rem;
  top: 2.4rem;
  z-index: 2000
}

.popup-settings > div  {
  padding: 0.5rem;
}

.popup-settings > div:hover {
  background-color: $toolbar-popup-hover-backgroundColor;
}

.popup-settings .fa {
  width: 1.1rem;
  margin-right: 0.3rem;
}

.Toolbar-runCaret {
  font-family: FontAwesome;
  padding: 0.5rem;
  font-size: 0.7rem;
}

.Toolbar-runCaret:hover {
  color: $formPrimary-color;
}

.Toolbar-runCaret:after {
  content: "\f0d7 "
}

.Toolbar-runPopup {
  background-color: $toolbar-popup-backgroundColor;
  top: 2.4rem;
  position: absolute;
  padding: 0.5rem;
  z-index: 2000;
}


.Tabs-tabPane {
  background-color: $tab-pane-backgroundColor;
}

.Tabs-tabTitles {
  display: flex;
  flex-wrap: wrap;
  background-color: $tab-titles-backgroundColor;
  border-bottom: 0.2rem $tab-titles-borderColor solid;
  padding-top: 0.5rem;
  min-height: 2.4rem;
}

.Tabs-tabContainer {
  display: inline-block;
}

.Tabs-tabTitle {
  position: relative;
  flex: 0 1;
  /*flexbox workaround some browsers (mostly Safari) needs to have some properties defined explicitly to handle auto sizing correctly*/
  flex-basis: auto;
  flex-shrink: 0;
  /*end flexbox workaround*/
  min-height: 1.7rem;
  white-space: nowrap;
  display:flex;
  background-color: $tab-title-backgroundColor;
  padding: 0.3rem 0.3rem 0.3rem 0.9rem;
  border-right: 1px $tab-title-borderColor solid;
  cursor: pointer;
  font-size: 0.91rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Tabs-tabTitle.Tabs-active {
  background: $tab-title-active-backgroundColor;
  color: $tab-title-active-color;
}

.Tabs-tabTitle:hover {
  background: $tab-title-hover-backgroundColor;
  color: $tab-title-hover-color;
}

.Tabs-tabMainTitle {
  vertical-align: middle;
}

.Tabs-tabComplementTitle {
  display: inline-block;
  max-width: 70px;
  overflow: hidden;
  text-overflow: ellipsis;
  vertical-align: middle;
  opacity: 0.5;
  font-size: 0.8rem;
}

.Tabs-tabClose {
  display: inline-block;
  margin-left: 0.3rem;
}

.Tabs-tabClose:after {
  content: "\f00d";
  color: $tab-close-color;
  padding: 0.1rem;
  font-family: FontAwesome;
  font-size: 0.9rem;
}

.Tabs-tabClose:hover {
  background-color: $tab-close-hover-backgroundColor;
}

.Tabs-contextMenu {
  background-color: $contextMenu-backgroundColor;
  position: absolute;
  padding: 0.5rem;
  min-width: 9rem;
  z-index: 200;
}

.Tabs-contextMenuContainer {
  position: absolute;
  bottom: 2px;
  left: 2px;
  z-index: 200;
}

.Tabs-contextButton {
  color: $contextMenu-button-color;
  padding: 0.5rem;
  font-size: 0.8rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Tabs-contextButton:hover {
  background-color: $contextMenu-button-hover-backgroundColor;
  color: $contextMenu-button-hover-color;
}


.Modal-overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: $modal-overlay-backgroundColor;
  z-index: 99999;
  opacity:1;
}

.Modal-content {
  background-color: $modal-backgroundColor;
  box-shadow: 1rem 1rem 1rem 0 $modal-shadowColor;
  color: $modal-color;
  display: block;
  float: left;
  height: auto;
  position: fixed;
  width: auto;
  z-index: 1050;
  font-weight: 200;
  min-width: 30%;
  border-radius: 0.1rem;
}


.Modal-close {
  position: absolute;
  right: 1rem;
  top: 0.5rem;
}

.Modal-close:after {
  color: $modal-close-color;
  font-family: FontAwesome;
  content: '\f00d'
}

.Modal-close:hover:after {
  color: $modal-close-hover-color;
  cursor: pointer;
}


.form-group {
  display: block;
  margin: 0.5rem 1rem;
  min-width: 8rem;
}

.form-group > * {
  display: block;
  width: 100%;
  margin-top: 0.3rem;
}

select {
  border: none;
  background-color: $controls-backgroundColor;
  color: $controls-color;
  border-bottom: solid 0.2rem $controls-borderColor;
  transition: border 0.3s;
  padding: 0.5rem;
}

select:hover, select:focus, select:active {
  border-bottom: solid 0.2rem $controls-hover-borderColor;
}

input {
  border: none;
  background-color: $controls-backgroundColor;
  color: $controls-color;
  border-bottom: solid 0.2rem $controls-borderColor;
  transition: border 0.3s;
  padding: 0.3rem;
}

input:hover, input:focus, input:active {
  border-bottom: solid 0.2rem $controls-hover-borderColor;
}

input[type=text] {
  width: 100%;
}

input[type=checkbox] {
  width: auto;
  /*fix for slow checks (blinks) in Safari*/
  transform: translateZ(0);
}

textarea {
  background-color: $controls-backgroundColor;
  color: $controls-color;
}

.button-bar {
  display: flex;
  margin-top: 2rem;
  flex-direction: row-reverse;
}

.button {
  margin-left: 1rem;
  flex: 0.1 1;
  border: none;
  color: $button-color;
  padding: 0.5rem;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  box-shadow: 0 0 1px $button-shadowColor;
}

.button.disabled, .disabled {
  color: $button-disabled-color;
}

.button:hover, .button:focus, button:active {
  box-shadow: 0 0 0.1rem $button-active-shadowColor;
}

.button.confirmation {
  background-color: $button-confirmation-backgroundColor;
}

.button.danger {
  background-color: $button-danger-backgroundColor;
}

:focus {
  outline: 0;
}


.resizer {
  width: 11px;
  display: flex;
  position: relative;
  margin: 0 -5px;
  z-index: 1000;
}

.resizer-line {
  background: $resizer-backgroundColor;
  opacity: .2;
  /*z-index: 1000;*/
  box-sizing: border-box;
  background-clip: padding-box;
  width: 11px;
  border-left: 5px solid $resizer-borderColor;
  border-right: 5px solid $resizer-borderColor;
  cursor: col-resize;
}

.resizer-horizontal {
  background: $resizer-backgroundColor;
  opacity: .2;
  /*z-index: 1000;*/
  box-sizing: border-box;
  background-clip: padding-box;
  height: 15px;
  margin: -5px 0;
  border-top: 5px solid $resizer-borderColor;
  border-bottom: 5px solid $resizer-borderColor;
  cursor: row-resize;
  width: 100%;
}


.resizer-horizontal:hover {
  transition: all 2s ease;
  border-top: 5px solid $resizer-hover-borderColor;
  border-bottom: 5px solid $resizer-hover-borderColor;
}

.resizer-line:hover {
  transition: all 2s ease;
  border-left: 5px solid $resizer-hover-borderColor;
  border-right: 5px solid $resizer-hover-borderColor;
}

.resizer-line:hover {
  transition: all 2s ease;
}

.resizer:hover .docker {
  display: block;
  opacity:1;
  /*transition:0s 1s;*/
  transition: 2s opacity;
}

.docker {
  opacity:0;
  font-size: 2rem;
  color: $resizer-icons-color;
  position: absolute;
  transition:0s 1s;
  cursor: pointer;
}

.docker.left {
  margin-left: -3rem;
}

.docker:hover {
  color: $resizer-icons-hover-color;
}

.resizer.collapsed {
  min-width: 2.5rem;
  background-color: $resizer-collapsed-backgroundColor;
  cursor: pointer;
}

.resizer.collapsed:hover {
  background-color: $resizer-collapsed-hover-backgroundColor;
}

.pane-holder {
  color: $resizer-paneHolder-color;
  flex: 0 1;
  padding-top: 1rem;
  -ms-writing-mode: tb-lr;
      writing-mode: vertical-lr;
}

*, *:before, *:after {
  box-sizing: inherit;
}

html, body {
  box-sizing: border-box;
  font-family: proxima-nova, Helvetica Neue, Helvetica, Arial, sans-serif;
  width: 100%;
  height: 100%;
  margin: 0;
  font-size: 0.9em;
}

::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-thumb {
  background: $scrollBar-thumb-backgroundColor;
}

::-webkit-scrollbar-thumb:active {
  background-color: $scrollBar-thumb-hover-backgroundColor;
}

::-webkit-scrollbar-thumb:hover {
  background: $scrollBar-thumb-hover-backgroundColor;
}

::-webkit-scrollbar-track {
  background: $scrollBar-track-backgroundColor;
}

::-webkit-resizer {
  background: $scrollBar-resizer-backgroundColor;
}

::-webkit-scrollbar-corner {
  background: $scrollBar-corner-backgroundColor;
}

.root-container {
  background-color: $primary-backgroundColor;
  color: $primary-color;
}

.container {
  display: flex;
  flex-direction: column;
  min-width: 0;
  min-height: 0;
  height: 100%;
  width: 100%;
}

.block {
  display: flex;
  flex: 1 1;
  flex-direction: column;
  min-height: 0;
  min-width: 0;
}

.block-item {
  flex: 1 1;
}

.custom-editor {
  padding: 1rem;
}

h1,h2,h3,h4 {
  text-transform: lowercase;
  font-weight: 150;
  color: $headings-color;
}

.table {
  border-collapse: collapse;
  width: 100%;
}

.table tr {
  color: $table-color;
  background-color: $table-row-backgroundColor;
}

.table tr th {
  background-color: $table-heading-backgroundColor;
}

.table > thead {
  width: 100%;
}

.table > thead > tr {
  width: 100%;
}

.table > thead > tr > th {
   font-weight: bold;
   text-transform: uppercase;
   text-align: left;
   padding: 0.4rem 1rem 0.5rem 1rem;
   vertical-align: bottom;
   border-bottom: 0.1rem solid $table-heading-borderColor;
   border-right: 0.1rem solid $table-heading-borderColor;
   font-size: 0.8rem;
 }

.table > tbody > tr {
  vertical-align: middle;
  cursor: pointer;
  width: 100%;
  border-bottom: 0.2rem solid $table-row-borderColor;
}

.table > tbody > tr.active {
  background-color: $table-row-active-backgroundColor;
  color: $table-row-active-color;
}

.table > tbody > tr:hover > td {
  background-color: $table-row-hover-backgroundColor;
  color: $table-row-hover-color;
}

.table > tbody > tr > td > a:link {
  text-decoration: inherit;
  display: block;
  color: inherit;
  cursor: pointer;
}

.table > tbody > tr > td > a:visited {
  text-decoration: inherit;
  display: block;
  color: inherit;
  cursor: pointer;
}

.table > tbody > tr > td {
  font-weight: normal;
  padding: 0.6rem;
  border: 0;
  font-size: 0.8rem;
  cursor: pointer;
}

.table > tbody > tr:not(:hover):not(.active) > td.selection {
  background-color: $table-selection-backgroundColor;
  color: $table-selection-color;
}

a:not(.button)[href]:link, a:not(.button)[href]:visited, a:not(.button)[href]:hover, a:not(.button)[href]:active {
  color: $anchors-color;
}


.Popover-popoverDisplayLayer {
  display: none;
  position: fixed;
  z-index: 2;
}

.Popover-popoverContainer {
  position: absolute;
  z-index: 2;
}

.Popover-popoverCloseLayer {
  bottom: 0;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
}

.Popover-popoverContent {
  position: relative;
  z-index: 2;
}

.Popover-popoverContentWrapper {
  background: $popover-backgroundColor;
  border: 1px solid $popover-borderColor;
  box-shadow: 0 3px 12px $popover-shadowColor;
  border-radius: 4px;
  padding: 0.3rem;
}

.Popover-popoverTriangle {
  border: 7px solid transparent;
  border-bottom-color: $popover-backgroundColor;
  left: 10px;
  position: absolute;
  top: -14px;
}

.Popover-popoverTriangleShadow {
  border: 8px solid transparent;
  border-bottom-color: $popover-shadowColor;
  left: 9px;
  position: absolute;
  top: -16px;
}


.EntityTreeInputSearch-container {
  display: inline-block;
  margin-left: 0.2rem;
  margin-right: 0.2rem;
}

.EntityTreeInputSearch-search {
  display: inline-block;
}

.EntityTreeInputSearch-search > input {
  border: none;
  border-bottom: solid 0.2rem $controls-borderColor;
  transition: border 0.3s;
  padding: 0.2rem;
  width: 10rem;
}

.EntityTreeInputSearch-search > input:focus {
  border-bottom: solid 0.2rem $controls-hover-borderColor;
}

.EntityTreeInputSearch-search:before {
  content: "\f002";
  margin-right: 0.3rem;
  color: $entityTree-icon-color;
  font-family: FontAwesome;
}


.Wizard-wizardTitles {
  display: flex;
  flex-wrap: wrap;
  background-color: $tab-titles-backgroundColor;
  border-bottom: 0.2rem $tab-titles-borderColor solid;
  padding-top: 0.8rem;
  min-height: 2.8rem;
}

.Wizard-wizardTitle {
  position: relative;
  flex: 0 1;
  /*flexbox workaround some browsers (mostly Safari) needs to have some properties defined explicitly to handle auto sizing correctly*/
  flex-basis: auto;
  flex-shrink: 0;
  /*end flexbox workaround*/
  height: auto;
  white-space: nowrap;
  display:flex;
  background-color: $tab-title-backgroundColor;
  padding: 0.3rem 0.5rem 0.3rem 0.9rem;
  cursor: pointer;
  font-size: 0.9rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Wizard-wizardTitle + .Wizard-wizardTitle {
  padding-left: 1.4rem;
}

.Wizard-wizardTitleIcon {
  font-size: 0.9em;
  margin-right: 2px;
}

.Wizard-wizardTitle:before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 100%;
  width: 0;
  height: 0;
  margin-left: -1px;
  border-top: 13px solid transparent;
  border-bottom: 13px solid transparent;
  border-left: 13px solid $tab-title-borderColor;
  z-index: 1;
}

.Wizard-wizardTitle:after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 100%;
  width: 0;
  height: 0;
  margin-left: -2px;
  border-top: 13px solid transparent;
  border-bottom: 13px solid transparent;
  border-left: 13px solid $tab-title-backgroundColor;
  z-index: 2;
}

.Wizard-wizardTitle:last-child {
  padding-right: 1rem;
}

.Wizard-wizardTitle:last-child:before,
.Wizard-wizardTitle:last-child:after {
  display: none;
}

.Wizard-wizardTitle.Wizard-completed > span {
  opacity: 0.4;
}

.Wizard-wizardTitle.Wizard-active {
  background: $tab-title-active-backgroundColor;
  color: $tab-title-active-color;
}

.Wizard-wizardTitle.Wizard-active:after {
  border-left-color: $tab-title-active-backgroundColor;
}

.Wizard-wizardContent {
  background-color: $tab-pane-backgroundColor;
}


.EntityRefSelect-heading {
  margin-bottom: 0.2rem;
}

.EntityRefSelect-select {
  overflow-y: auto;
  overflow-x: auto;
  color: $controls-color;
  background-color: $controls-backgroundColor
}

.EntityRefSelect-select > ul {
  margin: 0rem;
  padding: 0rem;
  list-style: none;
}

.EntityRefSelect-select > ul > li {
  cursor: pointer;
  padding: 0.3rem;
  border-bottom: 0.1rem solid $controls-borderColor;
}

.EntityRefSelect-select > ul > li:hover {
  background-color: $controls-list-hover-backgroundColor;
  color: $controls-list-hover-color;
}

.EntityRefSelect-selectInput {
  cursor: pointer;
  font-size: 0.9rem;
  background-color: $controls-backgroundColor;
  border-bottom: solid 0.2rem $controls-borderColor;
  transition: border 0.3s;
  padding: 0.5rem;
  width: 100%;
  display: flex;
  color: $controls-color;
  margin-top: 2px;
}

.EntityRefSelect-selectInput:hover, .EntityRefSelect-selectInput:focus, .EntityRefSelect-selectInput:active {
  border-bottom: solid 0.2rem $controls-hover-borderColor;
}

.EntityRefSelect-selectInput > i {
  margin-top: 0.1rem;
}

.EntityRefSelect-selectInput > i:hover {
  color: $controls-hover-borderColor;
}

.EntityRefSelect-selectInput > span {
  margin-left: 0.5rem;
  white-space: nowrap;
  overflow-x: hidden;
}

.EntityRefSelect-selectInput > span.EntityRefSelect-link:hover {
  margin-left: 0.5rem;
  color: $controls-hover-borderColor;
  text-decoration: underline;
}

.EntityRefSelect-nameLabel {
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}


.ThemeModal-container {
  display: flex;
  flex-wrap: wrap;
  max-width: 400px;
}

.ThemeModal-item {
  display: inline-block;
  width: 80px;
  padding: 8px;
  cursor: pointer;
}

.ThemeModal-itemLabel {
  display: block;
  margin-bottom: 6px;
}

.ThemeModal-itemPreview {
  border: 1px solid $alternative-backgroundColor;
  height: 65px;
}

.ThemeModal-miniItem {
  display: inline-block;
  padding: 6px 8px;
  cursor: pointer;
}

.ThemeModal-miniItemLabel {
  display: block;
  margin-bottom: 6px;
}

.ThemeModal-miniItemPreview {
  display: inline-block;
  border: 1px solid $alternative-backgroundColor;
  margin-left: 2px;
  width: 25px;
  height: 15px;
}


.ApiModal-label {
  background-color: $primary-hover-backgroundColor;
  color: $primary-hover-color;
  padding: 0.2rem;
  font-weight: lighter;
  font-size: 0.8rem;
  margin-right: 0.5rem;
}

.ApiModal-label.ApiModal-minor {
  background-color: $secondary-color;
}

.ApiModal-url {
  color: $secondary-hover-backgroundColor;
}

.ApiModal-row {
  margin: 0.7rem 0 0.7rem 0;
}

.ApiModal-string { color: green; }
.ApiModal-number { color: darkorange; }
.ApiModal-boolean { color: blue; }
.ApiModal-null { color: magenta; }
.ApiModal-key { color: red; }

.ApiModal-overridesBox {
  height: 17rem;
  overflow: auto;
  width: 100%;
}

.ApiModal-link {
  text-decoration: none;
}


.MultiSelect-multiSelect {
  background-color: $controls-backgroundColor;
  border: none;
  letter-spacing: normal;
  word-spacing: normal;
  border-bottom: .2rem solid $controls-borderColor;
  color: $controls-color;
  transition: border .3s;
  padding: .5rem;
  font: 400 11px system-ui;
  overflow-y: scroll;
}

.MultiSelect-multiSelect:active, .MultiSelect-multiSelect:focus, .MultiSelect-multiSelect:hover {
  border-bottom: .2rem solid $controls-hover-borderColor;
}

.MultiSelect-allCheckContainer {
  margin-bottom: 0.2rem;
}

.MultiSelect-allCheck {
  display: inline-block;
  cursor: pointer;
}

.MultiSelect-allCheck * {
  cursor: inherit;
}

.MultiSelect-list {
  cursor: pointer;
  margin: 0px;
  padding: 0px;
  list-style: none;
}

.MultiSelect-list * {
  cursor: inherit;
}

.MultiSelect-listOption {
  white-space: pre;
  padding: 0px 2px 1px;
  min-height: 1.2em;
}

.MultiSelect-listOptionSelected {
  background-color: rgb(212, 212, 212);
}

.MultiSelect-list:active .MultiSelect-listOptionSelected, .MultiSelect-list:focus .MultiSelect-listOptionSelected {
  background-color: rgb(0, 105, 217);
  color: #fff;
}

.MultiSelect-listOptionLabel {
  display: block;
}

