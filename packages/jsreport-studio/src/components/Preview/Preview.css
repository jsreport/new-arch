
.previewContainer {
  display: flex;
  flex: 1 1;
  flex-direction: column;
  background-color: $preview-backgroundColor;
}

.previewTitles {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  background-color: $tab-titles-backgroundColor;
  border-bottom: 0.2rem $tab-titles-borderColor solid;
  padding-top: 0.1rem;
  min-height: 2.0rem;
}

.previewTitle {
  position: relative;
  flex: 0;
  /*flexbox workaround some browsers (mostly Safari) needs to have some properties defined explicitly to handle auto sizing correctly*/
  flex-basis: auto;
  flex-shrink: 0;
  /*end flexbox workaround*/
  min-height: 1.7rem;
  white-space: nowrap;
  display:flex;
  background-color: $tab-title-backgroundColor;
  padding: 0.3rem 0.9rem 0.3rem 0.9rem;
  border-right: 1px $tab-title-borderColor solid;
  cursor: pointer;
  font-size: 0.9rem;
  user-select: none;
}

.previewTitle.active {
  background: $tab-title-active-backgroundColor;
  color: $tab-title-active-color;
}

.previewTitle:hover {
  background: $tab-title-hover-backgroundColor;
  color: $tab-title-hover-color;
}

.previewTitleIcon {
  font-size: 0.9em;
  margin-right: 2px;
}

.previewDisplayContainer {
  background-color: $preview-backgroundColor;
  color: $preview-color;
}

.previewDisplayContainerDefaultBackground {
  /* emulates default background, color of browser */
  background-color: #fff;
  color: #000;
}

.profilerOperations {
  width: 100%;
  height: 100%;
}

.profilerOperationsControlsOverlay {
  position: absolute;
  z-index: 6;
}

.profilerButtonAction {
  cursor: pointer;
  padding-left: 0.6rem;
  padding-right: 0.6rem;
}

.profilerStartNode {
  cursor: pointer !important;
  width: 35px !important;
  border-radius: 50% !important;
}

.profilerStartNode span {
  margin-right: -2px;
}

.profilerOperationNode {
  cursor: pointer !important;
  border-radius: 1px !important;
}

.profilerEndNode {
  width: 70px !important;
  border-radius: 50% !important;
}

.profilerStartNode :global(.react-flow__handle),
.profilerOperationNode :global(.react-flow__handle) {
  opacity: 0 !important;
}

.profilerOperationNode.active {
  outline: 2px solid $primary-selection-backgroundColor;
}

.profilerOperationNode.running {
  animation: runningBlinker 0.7s linear infinite;
}

.profilerOperationNode.error {
  border: 1px solid #ff0000;
}

.profilerOperationNode.error:before {
  content: "";
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  background-color: #ff0000;
  opacity: 0.7;
  z-index: -1;
}

@keyframes runningBlinker {
  50% {
    opacity: 0.3;
  }
}

:global(#react-flow__arrowclosed-active) > * {
  stroke: $primary-selection-backgroundColor !important;
  fill: $primary-selection-backgroundColor !important;
}

.profilerOperationEdge :global(.react-flow__edge-path) {
  cursor: pointer;
  stroke-width: 2;
}

.profilerOperationEdge .profilerOperationEdgeExpander {
  stroke-width: 40;
  stroke-opacity: 0;
}

.profilerOperationEdge.active .main {
  stroke: $primary-selection-backgroundColor !important;
  marker-end: url("#react-flow__arrowclosed-active") !important;
}

.profilerLogs {
  width: 100%;
  overflow: auto;
  height: 100%;
  padding-left: 0.4rem;
  padding-right: 0.4rem;
}

.profilerLogItem {
  display: flex;
  font-size: 1.1rem;
  margin-bottom: 0.2rem;
  align-items: baseline;
  border-bottom: 1px dashed transparent;
}

.profilerLogItem:last-child {
  margin-bottom: 0;
}

.profilerLogItem.notActive {
  opacity: 0.6;
}

.profilerLogItem.active {
  opacity: 1;
  border-bottom: 1px dashed $primary-selection-backgroundColor;
}

.profilerLogItemLevel {
  min-width: 3.2em;
  max-width: 3.2em;
  margin-right: 0.3rem;
}

.profilerLogItemTime {
  font-size: 0.8em;
  min-width: 3.6em;
  max-width: 3.6em;
  margin-right: 0.5rem;
}

.profilerLogItemMessage {
  flex-grow: 1;
  word-break: break-all;
  white-space: break-spaces;
}

.profilerLogItemLevel,
.profilerLogItemTime {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.profilerLogItemLevel,
.profilerLogItemTime,
.profilerLogItemMessage {
  font-family: monospace;
}

.profilerReqResButtons {
  cursor: default;
  position: absolute;
  padding: 0.3rem;
  border-radius: 5px;
  border: 1px solid #000;
  background: #fff;
  min-width: 100px;
}

.profilerExecutionTime {
  position: absolute;
  left: 50%;
  bottom: calc(-50% - 5px)
}

.profilerExecutionTimeLabel {
  display: inline-block;
  color: $primary-color;
  transform: translateX(-50%);
}
