const promisify = require('util').promisify
const ReporterWorker = require('./reporterWorker')
let reporter

module.exports = (inputs, callback, done) => {
    const callbackAsync = promisify(callback)
    if (inputs.action === 'init') {
        reporter = new ReporterWorker(inputs, callbackAsync)
        return reporter.init()
            .then(() => done())
            .catch((e) => done(e))      
    }

    if (inputs.action === 'render') {
        return reporter.render(inputs.req)
            .then(r => {
                done(null, {
                    meta: r.meta,
                    //SharedArrayBuffer?
                    //TODO
                    content: r.content
                })
            })
            .catch(e => done(e))
    }

    done(new Error(`Unsupported worker action ${inputs.action}`))    
}