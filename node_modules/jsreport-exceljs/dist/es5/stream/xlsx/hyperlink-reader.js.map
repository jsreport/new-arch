{"version":3,"sources":["../../../../lib/stream/xlsx/hyperlink-reader.js"],"names":["require","EventEmitter","Sax","Enums","RelType","HyperlinkReader","workbook","id","_workbook","fn","hyperlinks","forEach","entry","options","emitHyperlinks","autodrain","emit","parser","createStream","on","node","name","rId","attributes","Id","Type","Hyperlink","relationship","type","RelationshipType","Styles","target","Target","targetMode","TargetMode","flowControl","createChild","pipe","sync","length","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;eAAuBA,OAAO,CAAC,QAAD,C;IAAvBC,Y,YAAAA,Y;;AACP,IAAMC,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;AAEA,IAAMG,KAAK,GAAGH,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,qBAAD,CAAvB;;IAEMK,e;;;;;AACJ,2BAAYC,QAAZ,EAAsBC,EAAtB,EAA0B;AAAA;;AAAA;;AACxB,0FADwB,CAGxB;;AACA,UAAKA,EAAL,GAAUA,EAAV;AAEA,UAAKC,SAAL,GAAiBF,QAAjB;AANwB;AAOzB;;;;yBAMIG,E,EAAI;AACP,aAAO,KAAKC,UAAL,CAAgBC,OAAhB,CAAwBF,EAAxB,CAAP;AACD;;;yBAEIG,K,EAAOC,O,EAAS;AAAA;;AACnB,UAAIC,cAAc,GAAG,KAArB;AACA,UAAIJ,UAAU,GAAG,IAAjB;;AACA,cAAQG,OAAO,CAACH,UAAhB;AACE,aAAK,MAAL;AACEI,UAAAA,cAAc,GAAG,IAAjB;AACA;;AACF,aAAK,OAAL;AACE,eAAKJ,UAAL,GAAkBA,UAAU,GAAG,EAA/B;AACA;;AACF;AACE;AARJ;;AAWA,UAAI,CAACI,cAAD,IAAmB,CAACJ,UAAxB,EAAoC;AAClCE,QAAAA,KAAK,CAACG,SAAN;AACA,aAAKC,IAAL,CAAU,UAAV;AACA;AACD;;AAED,UAAMC,MAAM,GAAGf,GAAG,CAACgB,YAAJ,CAAiB,IAAjB,EAAuB,EAAvB,CAAf;AACAD,MAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqB,UAAAC,IAAI,EAAI;AAC3B,YAAIA,IAAI,CAACC,IAAL,KAAc,cAAlB,EAAkC;AAChC,cAAMC,GAAG,GAAGF,IAAI,CAACG,UAAL,CAAgBC,EAA5B;;AACA,kBAAQJ,IAAI,CAACG,UAAL,CAAgBE,IAAxB;AACE,iBAAKrB,OAAO,CAACsB,SAAb;AAAwB;AACtB,oBAAMC,YAAY,GAAG;AACnBC,kBAAAA,IAAI,EAAEzB,KAAK,CAAC0B,gBAAN,CAAuBC,MADV;AAEnBR,kBAAAA,GAAG,EAAHA,GAFmB;AAGnBS,kBAAAA,MAAM,EAAEX,IAAI,CAACG,UAAL,CAAgBS,MAHL;AAInBC,kBAAAA,UAAU,EAAEb,IAAI,CAACG,UAAL,CAAgBW;AAJT,iBAArB;;AAMA,oBAAIpB,cAAJ,EAAoB;AAClB,kBAAA,MAAI,CAACE,IAAL,CAAU,WAAV,EAAuBW,YAAvB;AACD,iBAFD,MAEO;AACLjB,kBAAAA,UAAU,CAACiB,YAAY,CAACL,GAAd,CAAV,GAA+BK,YAA/B;AACD;AACF;AAAE;;AAEH;AACE;AAhBJ;AAkBD;AACF,OAtBD;AAwBAV,MAAAA,MAAM,CAACE,EAAP,CAAU,KAAV,EAAiB,YAAM;AACrB,QAAA,MAAI,CAACH,IAAL,CAAU,UAAV;AACD,OAFD,EA7CmB,CAiDnB;;AACA,UAAMmB,WAAW,GAAG,KAAK3B,SAAL,CAAe2B,WAAf,CAA2BC,WAA3B,EAApB;;AACAD,MAAAA,WAAW,CAACE,IAAZ,CACEpB,MADF,EAEE;AAACqB,QAAAA,IAAI,EAAE;AAAP,OAFF;AAIA1B,MAAAA,KAAK,CAACyB,IAAN,CAAWF,WAAX;AACD;;;wBAhEW;AACV,aAAQ,KAAKzB,UAAL,IAAmB,KAAKA,UAAL,CAAgB6B,MAApC,IAA+C,CAAtD;AACD;;;;EAZ2BtC,Y;;AA6E9BuC,MAAM,CAACC,OAAP,GAAiBpC,eAAjB","sourcesContent":["const {EventEmitter} = require('events');\nconst Sax = require('sax');\n\nconst Enums = require('../../doc/enums');\nconst RelType = require('../../xlsx/rel-type');\n\nclass HyperlinkReader extends EventEmitter {\n  constructor(workbook, id) {\n    super();\n\n    // in a workbook, each sheet will have a number\n    this.id = id;\n\n    this._workbook = workbook;\n  }\n\n  get count() {\n    return (this.hyperlinks && this.hyperlinks.length) || 0;\n  }\n\n  each(fn) {\n    return this.hyperlinks.forEach(fn);\n  }\n\n  read(entry, options) {\n    let emitHyperlinks = false;\n    let hyperlinks = null;\n    switch (options.hyperlinks) {\n      case 'emit':\n        emitHyperlinks = true;\n        break;\n      case 'cache':\n        this.hyperlinks = hyperlinks = {};\n        break;\n      default:\n        break;\n    }\n\n    if (!emitHyperlinks && !hyperlinks) {\n      entry.autodrain();\n      this.emit('finished');\n      return;\n    }\n\n    const parser = Sax.createStream(true, {});\n    parser.on('opentag', node => {\n      if (node.name === 'Relationship') {\n        const rId = node.attributes.Id;\n        switch (node.attributes.Type) {\n          case RelType.Hyperlink: {\n            const relationship = {\n              type: Enums.RelationshipType.Styles,\n              rId,\n              target: node.attributes.Target,\n              targetMode: node.attributes.TargetMode,\n            };\n            if (emitHyperlinks) {\n              this.emit('hyperlink', relationship);\n            } else {\n              hyperlinks[relationship.rId] = relationship;\n            }\n          }  break;\n\n          default:\n            break;\n        }\n      }\n    });\n\n    parser.on('end', () => {\n      this.emit('finished');\n    });\n\n    // create a down-stream flow-control to regulate the stream\n    const flowControl = this._workbook.flowControl.createChild();\n    flowControl.pipe(\n      parser,\n      {sync: true}\n    );\n    entry.pipe(flowControl);\n  }\n}\n\nmodule.exports = HyperlinkReader;\n"],"file":"hyperlink-reader.js"}