{"version":3,"sources":["../../../../lib/stream/xlsx/workbook-reader.js"],"names":["fs","require","EventEmitter","Stream","unzip","Sax","tmp","FlowControl","StyleManager","WorkbookPropertiesManager","WorksheetReader","HyperlinkReader","setGracefulCleanup","WorkbookReader","options","styles","init","properties","worksheetReaders","hyperlinkReaders","readers","atEnd","waitingWorkSheets","tempFileCleanupCallbacks","input","Readable","createReadStream","Error","stream","_getStream","zip","Parse","on","entry","match","sheetNo","path","autodrain","_parseWorkbook","_parseSharedStrings","_parseStyles","sharedStrings","_parseWorksheet","file","err","fd","cleanupCallback","tempStream","createWriteStream","push","pipe","_parseHyperlinks","length","currentBook","processBooks","worksheetInfo","worksheet","forEach","cb","emit","setImmediate","payload","entries","_emitEntry","type","parseStream","parser","createStream","inT","t","index","node","name","text","error","Type","collection","reader","id","worksheetReader","_getReader","worksheets","read","hyperlinksReader","hyperlinks","_flowControl","Options","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;eACuBA,OAAO,CAAC,QAAD,C;IAAvBC,Y,YAAAA,Y;;AACP,IAAMC,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,KAAK,GAAGH,OAAO,CAAC,UAAD,CAArB;;AACA,IAAMI,GAAG,GAAGJ,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMK,GAAG,GAAGL,OAAO,CAAC,KAAD,CAAnB;;AAEA,IAAMM,WAAW,GAAGN,OAAO,CAAC,0BAAD,CAA3B;;AAEA,IAAMO,YAAY,GAAGP,OAAO,CAAC,qCAAD,CAA5B;;AACA,IAAMQ,yBAAyB,GAAGR,OAAO,CAAC,iDAAD,CAAzC;;AAEA,IAAMS,eAAe,GAAGT,OAAO,CAAC,oBAAD,CAA/B;;AACA,IAAMU,eAAe,GAAGV,OAAO,CAAC,oBAAD,CAA/B;;AAEAK,GAAG,CAACM,kBAAJ;;IAEMC,c;;;;;AACJ,0BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;AAEA,UAAKA,OAAL,GAAeA,OAAO,GAAGA,OAAO,IAAI,EAApC;AAEA,UAAKC,MAAL,GAAc,IAAIP,YAAJ,EAAd;;AACA,UAAKO,MAAL,CAAYC,IAAZ;;AAEA,UAAKC,UAAL,GAAkB,IAAIR,yBAAJ,EAAlB,CARmB,CAUnB;;AACA,UAAKS,gBAAL,GAAwB,EAAxB,CAXmB,CAanB;;AACA,UAAKC,gBAAL,GAAwB,EAAxB,CAdmB,CAgBnB;;AACA,UAAKC,OAAL,GAAe,CAAf,CAjBmB,CAmBnB;;AACA,UAAKC,KAAL,GAAa,KAAb,CApBmB,CAsBnB;;AACA,UAAKC,iBAAL,GAAyB,EAAzB,CAvBmB,CAyBnB;;AACA,UAAKC,wBAAL,GAAgC,EAAhC;AA1BmB;AA2BpB;;;;+BAEUC,K,EAAO;AAChB,UAAIA,KAAK,YAAYrB,MAAM,CAACsB,QAA5B,EAAsC;AACpC,eAAOD,KAAP;AACD;;AACD,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAOxB,EAAE,CAAC0B,gBAAH,CAAoBF,KAApB,CAAP;AACD;;AACD,YAAM,IAAIG,KAAJ,CAAU,2BAAV,CAAN;AACD;;;yBASIH,K,EAAOV,O,EAAS;AAAA;;AACnB,UAAMc,MAAM,GAAI,KAAKA,MAAL,GAAc,KAAKC,UAAL,CAAgBL,KAAhB,CAA9B;;AACA,UAAMM,GAAG,GAAI,KAAKA,GAAL,GAAW1B,KAAK,CAAC2B,KAAN,EAAxB;AAEAD,MAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,UAAAC,KAAK,EAAI;AACvB,YAAIC,KAAJ;AACA,YAAIC,OAAJ;;AACA,gBAAQF,KAAK,CAACG,IAAd;AACE,eAAK,aAAL;AACA,eAAK,4BAAL;AACEH,YAAAA,KAAK,CAACI,SAAN;AACA;;AACF,eAAK,iBAAL;AACE,YAAA,MAAI,CAACC,cAAL,CAAoBL,KAApB,EAA2BnB,OAA3B;;AACA;;AACF,eAAK,sBAAL;AACE,YAAA,MAAI,CAACyB,mBAAL,CAAyBN,KAAzB,EAAgCnB,OAAhC;;AACA;;AACF,eAAK,eAAL;AACE,YAAA,MAAI,CAAC0B,YAAL,CAAkBP,KAAlB,EAAyBnB,OAAzB;;AACA;;AACF;AACE,gBAAImB,KAAK,CAACG,IAAN,CAAWF,KAAX,CAAiB,gCAAjB,CAAJ,EAAwD;AACtDA,cAAAA,KAAK,GAAGD,KAAK,CAACG,IAAN,CAAWF,KAAX,CAAiB,kCAAjB,CAAR;AACAC,cAAAA,OAAO,GAAGD,KAAK,CAAC,CAAD,CAAf;;AACA,kBAAI,MAAI,CAACO,aAAT,EAAwB;AACtB,gBAAA,MAAI,CAACC,eAAL,CAAqBT,KAArB,EAA4BE,OAA5B,EAAqCrB,OAArC;AACD,eAFD,MAEO;AACL;AACAR,gBAAAA,GAAG,CAACqC,IAAJ,CAAS,UAACC,GAAD,EAAMR,IAAN,EAAYS,EAAZ,EAAgBC,eAAhB,EAAoC;AAC3C,sBAAIF,GAAJ,EAAS,MAAMA,GAAN;AAET,sBAAMG,UAAU,GAAG/C,EAAE,CAACgD,iBAAH,CAAqBZ,IAArB,CAAnB;;AAEA,kBAAA,MAAI,CAACd,iBAAL,CAAuB2B,IAAvB,CAA4B;AAACd,oBAAAA,OAAO,EAAPA,OAAD;AAAUrB,oBAAAA,OAAO,EAAPA,OAAV;AAAmBsB,oBAAAA,IAAI,EAAJA;AAAnB,mBAA5B;;AACAH,kBAAAA,KAAK,CAACiB,IAAN,CAAWH,UAAX;;AAEA,kBAAA,MAAI,CAACxB,wBAAL,CAA8B0B,IAA9B,CAAmCH,eAAnC;AACD,iBATD;AAUD;AACF,aAlBD,MAkBO,IAAIb,KAAK,CAACG,IAAN,CAAWF,KAAX,CAAiB,4CAAjB,CAAJ,EAAoE;AACzEA,cAAAA,KAAK,GAAGD,KAAK,CAACG,IAAN,CAAWF,KAAX,CAAiB,8CAAjB,CAAR;AACAC,cAAAA,OAAO,GAAGD,KAAK,CAAC,CAAD,CAAf;;AACA,cAAA,MAAI,CAACiB,gBAAL,CAAsBlB,KAAtB,EAA6BE,OAA7B,EAAsCrB,OAAtC;AACD,aAJM,MAIA;AACLmB,cAAAA,KAAK,CAACI,SAAN;AACD;;AACD;AAxCJ;AA0CD,OA7CD;AA+CAP,MAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpB,YAAI,MAAI,CAACV,iBAAL,CAAuB8B,MAA3B,EAAmC;AACjC,cAAIC,WAAW,GAAG,CAAlB;;AAEA,cAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,gBAAMC,aAAa,GAAG,MAAI,CAACjC,iBAAL,CAAuB+B,WAAvB,CAAtB;AACA,gBAAMpB,KAAK,GAAGjC,EAAE,CAAC0B,gBAAH,CAAoB6B,aAAa,CAACnB,IAAlC,CAAd;AAFyB,gBAIlBD,OAJkB,GAIPoB,aAJO,CAIlBpB,OAJkB;;AAKzB,gBAAMqB,SAAS,GAAG,MAAI,CAACd,eAAL,CAChBT,KADgB,EAEhBE,OAFgB,EAGhBoB,aAAa,CAACzC,OAHE,CAAlB;;AAMA0C,YAAAA,SAAS,CAACxB,EAAV,CAAa,UAAb,EAAyB,YAAM;AAC7B,gBAAEqB,WAAF;;AACA,kBAAIA,WAAW,KAAK,MAAI,CAAC/B,iBAAL,CAAuB8B,MAA3C,EAAmD;AACjD;AACA,gBAAA,MAAI,CAAC7B,wBAAL,CAA8BkC,OAA9B,CAAsC,UAAAC,EAAE,EAAI;AAC1CA,kBAAAA,EAAE;AACH,iBAFD;;AAIA,gBAAA,MAAI,CAACnC,wBAAL,GAAgC,EAAhC;;AAEA,gBAAA,MAAI,CAACoC,IAAL,CAAU,KAAV;;AACA,gBAAA,MAAI,CAACtC,KAAL,GAAa,IAAb;;AACA,oBAAI,CAAC,MAAI,CAACD,OAAV,EAAmB;AACjB,kBAAA,MAAI,CAACuC,IAAL,CAAU,UAAV;AACD;AACF,eAbD,MAaO;AACLC,gBAAAA,YAAY,CAACN,YAAD,CAAZ;AACD;AACF,aAlBD;AAmBD,WA9BD;;AA+BAM,UAAAA,YAAY,CAACN,YAAD,CAAZ;AACD,SAnCD,MAmCO;AACL,UAAA,MAAI,CAACK,IAAL,CAAU,KAAV;;AACA,UAAA,MAAI,CAACtC,KAAL,GAAa,IAAb;;AACA,cAAI,CAAC,MAAI,CAACD,OAAV,EAAmB;AACjB,YAAA,MAAI,CAACuC,IAAL,CAAU,UAAV;AACD;AACF;AACF,OA3CD;AA6CA7B,MAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,UAAAY,GAAG,EAAI;AACrB,QAAA,MAAI,CAACe,IAAL,CAAU,OAAV,EAAmBf,GAAnB;AACD,OAFD,EAhGmB,CAoGnB;AACA;;AACAhB,MAAAA,MAAM,CAACsB,IAAP,CAAYpB,GAAZ;AACD;;;+BAEUhB,O,EAAS+C,O,EAAS;AAC3B,UAAI/C,OAAO,CAACgD,OAAR,KAAoB,MAAxB,EAAgC;AAC9B,aAAKH,IAAL,CAAU,OAAV,EAAmBE,OAAnB;AACD;AACF;;;mCAEc5B,K,EAAOnB,O,EAAS;AAC7B,WAAKiD,UAAL,CAAgBjD,OAAhB,EAAyB;AAACkD,QAAAA,IAAI,EAAE;AAAP,OAAzB;;AACA,WAAK/C,UAAL,CAAgBgD,WAAhB,CAA4BhC,KAA5B;AACD;;;wCAEmBA,K,EAAOnB,O,EAAS;AAAA;;AAClC,WAAKiD,UAAL,CAAgBjD,OAAhB,EAAyB;AAACkD,QAAAA,IAAI,EAAE;AAAP,OAAzB;;AACA,UAAIvB,aAAa,GAAG,IAApB;;AACA,cAAQ3B,OAAO,CAAC2B,aAAhB;AACE,aAAK,OAAL;AACEA,UAAAA,aAAa,GAAG,KAAKA,aAAL,GAAqB,EAArC;AACA;;AACF,aAAK,MAAL;AACE;;AACF;AACER,UAAAA,KAAK,CAACI,SAAN;AACA;AARJ;;AAWA,UAAM6B,MAAM,GAAG7D,GAAG,CAAC8D,YAAJ,CAAiB,IAAjB,EAAuB,EAAvB,CAAf;AACA,UAAIC,GAAG,GAAG,KAAV;AACA,UAAIC,CAAC,GAAG,IAAR;AACA,UAAIC,KAAK,GAAG,CAAZ;AACAJ,MAAAA,MAAM,CAAClC,EAAP,CAAU,SAAV,EAAqB,UAAAuC,IAAI,EAAI;AAC3B,YAAIA,IAAI,CAACC,IAAL,KAAc,GAAlB,EAAuB;AACrBH,UAAAA,CAAC,GAAG,IAAJ;AACAD,UAAAA,GAAG,GAAG,IAAN;AACD;AACF,OALD;AAMAF,MAAAA,MAAM,CAAClC,EAAP,CAAU,UAAV,EAAsB,UAAAwC,IAAI,EAAI;AAC5B,YAAIJ,GAAG,IAAII,IAAI,KAAK,GAApB,EAAyB;AACvB,cAAI/B,aAAJ,EAAmB;AACjBA,YAAAA,aAAa,CAACQ,IAAd,CAAmBoB,CAAnB;AACD,WAFD,MAEO;AACL,YAAA,MAAI,CAACV,IAAL,CAAU,eAAV,EAA2B;AAACW,cAAAA,KAAK,EAAEA,KAAK,EAAb;AAAiBG,cAAAA,IAAI,EAAEJ;AAAvB,aAA3B;AACD;;AACDA,UAAAA,CAAC,GAAG,IAAJ;AACD;AACF,OATD;AAUAH,MAAAA,MAAM,CAAClC,EAAP,CAAU,MAAV,EAAkB,UAAAyC,IAAI,EAAI;AACxBJ,QAAAA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGI,IAAP,GAAcA,IAAnB;AACD,OAFD;AAGAP,MAAAA,MAAM,CAAClC,EAAP,CAAU,OAAV,EAAmB,UAAA0C,KAAK,EAAI;AAC1B,QAAA,MAAI,CAACf,IAAL,CAAU,OAAV,EAAmBe,KAAnB;AACD,OAFD;AAGAzC,MAAAA,KAAK,CAACiB,IAAN,CAAWgB,MAAX;AACD;;;iCAEYjC,K,EAAOnB,O,EAAS;AAC3B,WAAKiD,UAAL,CAAgBjD,OAAhB,EAAyB;AAACkD,QAAAA,IAAI,EAAE;AAAP,OAAzB;;AACA,UAAIlD,OAAO,CAACC,MAAR,KAAmB,OAAvB,EAAgC;AAC9BkB,QAAAA,KAAK,CAACI,SAAN;AACA;AACD;;AACD,WAAKtB,MAAL,GAAc,IAAIP,YAAJ,EAAd;AACA,WAAKO,MAAL,CAAYkD,WAAZ,CAAwBhC,KAAxB;AACD;;;+BAEU0C,I,EAAMC,U,EAAYzC,O,EAAS;AAAA;;AACpC,UAAI0C,MAAM,GAAGD,UAAU,CAACzC,OAAD,CAAvB;;AACA,UAAI,CAAC0C,MAAL,EAAa;AACXA,QAAAA,MAAM,GAAG,IAAIF,IAAJ,CAAS,IAAT,EAAexC,OAAf,CAAT;AACA,aAAKf,OAAL;AACAyD,QAAAA,MAAM,CAAC7C,EAAP,CAAU,UAAV,EAAsB,YAAM;AAC1B,cAAI,CAAC,GAAE,MAAI,CAACZ,OAAZ,EAAqB;AACnB,gBAAI,MAAI,CAACC,KAAT,EAAgB;AACd,cAAA,MAAI,CAACsC,IAAL,CAAU,UAAV;AACD;AACF;AACF,SAND;AAOAiB,QAAAA,UAAU,CAACzC,OAAD,CAAV,GAAsB0C,MAAtB;AACD;;AACD,aAAOA,MAAP;AACD;;;oCAEe5C,K,EAAOE,O,EAASrB,O,EAAS;AACvC,WAAKiD,UAAL,CAAgBjD,OAAhB,EAAyB;AAACkD,QAAAA,IAAI,EAAE,WAAP;AAAoBc,QAAAA,EAAE,EAAE3C;AAAxB,OAAzB;;AACA,UAAM4C,eAAe,GAAG,KAAKC,UAAL,CAAgBtE,eAAhB,EAAiC,KAAKQ,gBAAtC,EAAwDiB,OAAxD,CAAxB;;AACA,UAAIrB,OAAO,CAACmE,UAAR,KAAuB,MAA3B,EAAmC;AACjC,aAAKtB,IAAL,CAAU,WAAV,EAAuBoB,eAAvB;AACD;;AACDA,MAAAA,eAAe,CAACG,IAAhB,CAAqBjD,KAArB,EAA4BnB,OAA5B,EAAqC,KAAKK,gBAAL,CAAsBgB,OAAtB,CAArC;AACA,aAAO4C,eAAP;AACD;;;qCAEgB9C,K,EAAOE,O,EAASrB,O,EAAS;AACxC,WAAKiD,UAAL,CAAgBjD,OAAhB,EAAyB;AAACkD,QAAAA,IAAI,EAAE,WAAP;AAAoBc,QAAAA,EAAE,EAAE3C;AAAxB,OAAzB;;AACA,UAAMgD,gBAAgB,GAAG,KAAKH,UAAL,CAAgBrE,eAAhB,EAAiC,KAAKQ,gBAAtC,EAAwDgB,OAAxD,CAAzB;;AACA,UAAIrB,OAAO,CAACsE,UAAR,KAAuB,MAA3B,EAAmC;AACjC,aAAKzB,IAAL,CAAU,YAAV,EAAwBwB,gBAAxB;AACD;;AACDA,MAAAA,gBAAgB,CAACD,IAAjB,CAAsBjD,KAAtB,EAA6BnB,OAA7B;AACD;;;wBAlNiB;AAChB,UAAI,CAAC,KAAKuE,YAAV,EAAwB;AACtB,aAAKA,YAAL,GAAoB,IAAI9E,WAAJ,CAAgB,KAAKO,OAArB,CAApB;AACD;;AACD,aAAO,KAAKuE,YAAZ;AACD;;;;EA7C0BnF,Y,GA6P7B;;;AACAW,cAAc,CAACyE,OAAf,GAAyB;AACvBxB,EAAAA,OAAO,EAAE,CAAC,MAAD,CADc;AAEvBrB,EAAAA,aAAa,EAAE,CAAC,OAAD,EAAU,MAAV,CAFQ;AAGvB1B,EAAAA,MAAM,EAAE,CAAC,OAAD,CAHe;AAIvBqE,EAAAA,UAAU,EAAE,CAAC,OAAD,EAAU,MAAV,CAJW;AAKvBH,EAAAA,UAAU,EAAE,CAAC,MAAD;AALW,CAAzB;AASAM,MAAM,CAACC,OAAP,GAAiB3E,cAAjB","sourcesContent":["const fs = require('fs');\nconst {EventEmitter} = require('events');\nconst Stream = require('stream');\nconst unzip = require('unzipper');\nconst Sax = require('sax');\nconst tmp = require('tmp');\n\nconst FlowControl = require('../../utils/flow-control');\n\nconst StyleManager = require('../../xlsx/xform/style/styles-xform');\nconst WorkbookPropertiesManager = require('../../xlsx/xform/book/workbook-properties-xform');\n\nconst WorksheetReader = require('./worksheet-reader');\nconst HyperlinkReader = require('./hyperlink-reader');\n\ntmp.setGracefulCleanup();\n\nclass WorkbookReader extends EventEmitter {\n  constructor(options) {\n    super();\n\n    this.options = options = options || {};\n\n    this.styles = new StyleManager();\n    this.styles.init();\n\n    this.properties = new WorkbookPropertiesManager();\n\n    // worksheet readers, indexed by sheetNo\n    this.worksheetReaders = {};\n\n    // hyperlink readers, indexed by sheetNo\n    this.hyperlinkReaders = {};\n\n    // count the open readers\n    this.readers = 0;\n\n    // end of stream check\n    this.atEnd = false;\n\n    // worksheets, deferred for parsing after shared strings reading\n    this.waitingWorkSheets = [];\n\n    // callbacks for temp files cleanup\n    this.tempFileCleanupCallbacks = [];\n  }\n\n  _getStream(input) {\n    if (input instanceof Stream.Readable) {\n      return input;\n    }\n    if (typeof input === 'string') {\n      return fs.createReadStream(input);\n    }\n    throw new Error('Could not recognise input');\n  }\n\n  get flowControl() {\n    if (!this._flowControl) {\n      this._flowControl = new FlowControl(this.options);\n    }\n    return this._flowControl;\n  }\n\n  read(input, options) {\n    const stream = (this.stream = this._getStream(input));\n    const zip = (this.zip = unzip.Parse());\n\n    zip.on('entry', entry => {\n      let match;\n      let sheetNo;\n      switch (entry.path) {\n        case '_rels/.rels':\n        case 'xl/_rels/workbook.xml.rels':\n          entry.autodrain();\n          break;\n        case 'xl/workbook.xml':\n          this._parseWorkbook(entry, options);\n          break;\n        case 'xl/sharedStrings.xml':\n          this._parseSharedStrings(entry, options);\n          break;\n        case 'xl/styles.xml':\n          this._parseStyles(entry, options);\n          break;\n        default:\n          if (entry.path.match(/xl\\/worksheets\\/sheet\\d+[.]xml/)) {\n            match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n            sheetNo = match[1];\n            if (this.sharedStrings) {\n              this._parseWorksheet(entry, sheetNo, options);\n            } else {\n              // create temp file for each worksheet\n              tmp.file((err, path, fd, cleanupCallback) => {\n                if (err) throw err;\n\n                const tempStream = fs.createWriteStream(path);\n\n                this.waitingWorkSheets.push({sheetNo, options, path});\n                entry.pipe(tempStream);\n\n                this.tempFileCleanupCallbacks.push(cleanupCallback);\n              });\n            }\n          } else if (entry.path.match(/xl\\/worksheets\\/_rels\\/sheet\\d+[.]xml.rels/)) {\n            match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n            sheetNo = match[1];\n            this._parseHyperlinks(entry, sheetNo, options);\n          } else {\n            entry.autodrain();\n          }\n          break;\n      }\n    });\n\n    zip.on('close', () => {\n      if (this.waitingWorkSheets.length) {\n        let currentBook = 0;\n\n        const processBooks = () => {\n          const worksheetInfo = this.waitingWorkSheets[currentBook];\n          const entry = fs.createReadStream(worksheetInfo.path);\n\n          const {sheetNo} = worksheetInfo;\n          const worksheet = this._parseWorksheet(\n            entry,\n            sheetNo,\n            worksheetInfo.options\n          );\n\n          worksheet.on('finished', () => {\n            ++currentBook;\n            if (currentBook === this.waitingWorkSheets.length) {\n              // temp files cleaning up\n              this.tempFileCleanupCallbacks.forEach(cb => {\n                cb();\n              });\n\n              this.tempFileCleanupCallbacks = [];\n\n              this.emit('end');\n              this.atEnd = true;\n              if (!this.readers) {\n                this.emit('finished');\n              }\n            } else {\n              setImmediate(processBooks);\n            }\n          });\n        };\n        setImmediate(processBooks);\n      } else {\n        this.emit('end');\n        this.atEnd = true;\n        if (!this.readers) {\n          this.emit('finished');\n        }\n      }\n    });\n\n    zip.on('error', err => {\n      this.emit('error', err);\n    });\n\n    // Pipe stream into top flow-control\n    // this.flowControl.pipe(zip);\n    stream.pipe(zip);\n  }\n\n  _emitEntry(options, payload) {\n    if (options.entries === 'emit') {\n      this.emit('entry', payload);\n    }\n  }\n\n  _parseWorkbook(entry, options) {\n    this._emitEntry(options, {type: 'workbook'});\n    this.properties.parseStream(entry);\n  }\n\n  _parseSharedStrings(entry, options) {\n    this._emitEntry(options, {type: 'shared-strings'});\n    let sharedStrings = null;\n    switch (options.sharedStrings) {\n      case 'cache':\n        sharedStrings = this.sharedStrings = [];\n        break;\n      case 'emit':\n        break;\n      default:\n        entry.autodrain();\n        return;\n    }\n\n    const parser = Sax.createStream(true, {});\n    let inT = false;\n    let t = null;\n    let index = 0;\n    parser.on('opentag', node => {\n      if (node.name === 't') {\n        t = null;\n        inT = true;\n      }\n    });\n    parser.on('closetag', name => {\n      if (inT && name === 't') {\n        if (sharedStrings) {\n          sharedStrings.push(t);\n        } else {\n          this.emit('shared-string', {index: index++, text: t});\n        }\n        t = null;\n      }\n    });\n    parser.on('text', text => {\n      t = t ? t + text : text;\n    });\n    parser.on('error', error => {\n      this.emit('error', error);\n    });\n    entry.pipe(parser);\n  }\n\n  _parseStyles(entry, options) {\n    this._emitEntry(options, {type: 'styles'});\n    if (options.styles !== 'cache') {\n      entry.autodrain();\n      return;\n    }\n    this.styles = new StyleManager();\n    this.styles.parseStream(entry);\n  }\n\n  _getReader(Type, collection, sheetNo) {\n    let reader = collection[sheetNo];\n    if (!reader) {\n      reader = new Type(this, sheetNo);\n      this.readers++;\n      reader.on('finished', () => {\n        if (!--this.readers) {\n          if (this.atEnd) {\n            this.emit('finished');\n          }\n        }\n      });\n      collection[sheetNo] = reader;\n    }\n    return reader;\n  }\n\n  _parseWorksheet(entry, sheetNo, options) {\n    this._emitEntry(options, {type: 'worksheet', id: sheetNo});\n    const worksheetReader = this._getReader(WorksheetReader, this.worksheetReaders, sheetNo);\n    if (options.worksheets === 'emit') {\n      this.emit('worksheet', worksheetReader);\n    }\n    worksheetReader.read(entry, options, this.hyperlinkReaders[sheetNo]);\n    return worksheetReader;\n  }\n\n  _parseHyperlinks(entry, sheetNo, options) {\n    this._emitEntry(options, {type: 'hyerlinks', id: sheetNo});\n    const hyperlinksReader = this._getReader(HyperlinkReader, this.hyperlinkReaders, sheetNo);\n    if (options.hyperlinks === 'emit') {\n      this.emit('hyperlinks', hyperlinksReader);\n    }\n    hyperlinksReader.read(entry, options);\n  }\n}\n\n// for reference - these are the valid values for options\nWorkbookReader.Options = {\n  entries: ['emit'],\n  sharedStrings: ['cache', 'emit'],\n  styles: ['cache'],\n  hyperlinks: ['cache', 'emit'],\n  worksheets: ['emit'],\n};\n\n\nmodule.exports = WorkbookReader;\n"],"file":"workbook-reader.js"}