{"version":3,"sources":["../../../../lib/stream/xlsx/workbook-writer.js"],"names":["require","StringDecoder","fs","Transform","DOMParser","Archiver","unzip","streamifier","tmp","StreamBuf","RelType","StylesXform","SharedStrings","DefinedNames","CoreXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","SharedStringsXform","WorksheetWriter","theme1Xml","WorkbookWriter","options","created","Date","modified","creator","lastModifiedBy","lastPrinted","useSharedStrings","sharedStrings","template","styles","useStyles","Mock","_definedNames","_worksheets","_tmpWorksheets","Map","_cellStylesCache","views","zipOptions","zip","media","commentRefs","templateBuf","templateWrites","templateInfo","templateZip","Parse","stream","filename","createWriteStream","pipe","promise","Promise","resolve","all","addThemes","addOfficeRels","name","id","existingWorkSheet","sheets","find","s","sheetFileId","nextId","path","sheetId","bufSize","batch","isWorksheet","has","tmpWorksheet","get","zipEntryPath","tmpWriteStream","tmpPath","waitComplete","reject","on","append","emit","commitWorksheet","worksheet","committed","commit","promises","map","length","templateStream","createReadStream","files","pendingOperations","waitingWorkSheets","entry","push","parseXMLFile","match","_resolve","_reject","file","err","tmpFilePath","tempStream","ref","filesDocuments","workbookDoc","doc","relsDoc","Array","from","getElementsByTagName","sheetNode","parseInt","getAttribute","rId","targetRNode","rNode","sheetFile","sheetFileFound","w","lastSheetId","lastSheetFileId","sheetFileSrc","parseStream","originalSrc","lastWorkbookRelsId","reduce","acu","relNode","rIdNumber","addMedia","newWorksheets","newWorksheetsColsWidth","forEach","isArray","_columns","set","c","number","_number","width","replacedWorksheets","sheet","existingWorksheetIndex","findIndex","replaced","calcCells","_calcCells","splice","filter","_commitWorksheets","fileName","fileDoc","content","sheetNodeRef","node","newWorksheet","newWorkSheetRef","cloneNode","setAttribute","parentNode","insertBefore","nextSibling","toString","xml","sheetsNode","i","newSheetNode","createElement","appendChild","relationshipsNode","newRelNode","calcChainNode","cellRefNodes","existingCalcCells","cellRefNode","worksheetIndex","cellRef","replacedWorksheetFound","removeChild","replacedWorksheet","calcCellsInWorksheet","Object","entries","cellAddress","newCellRef","addContentTypes","addApp","addCore","addSharedStrings","addStyles","addWorkbookRels","addWorkbook","tmpWorksheetCompletePromises","value","worksheetsToCopy","worksheetStream","decoder","placeholderFound","distStream","transform","chunk","enc","cb","chunkStr","write","includes","colsXML","rawColsXML","slice","replace","flush","str","end","_finalize","result","image","assign","type","undefined","tabColor","console","trace","properties","_getNextWorksheetId","workbook","state","pageSetup","autoFilter","addWorksheet","xform","toXml","Id","Type","OfficeDocument","Target","CoreProperties","ExtenderProperties","model","worksheets","Boolean","medium","idx","extension","buffer","base64","dataimg64","substring","indexOf","Error","coreXform","count","sharedStringsXform","relationships","Styles","Theme","Worksheet","definedNames","calcProperties","prepare","finalize","parseFromString","module","exports"],"mappings":"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","sourcesContent":["const {StringDecoder} = require('string_decoder');\nconst fs = require('fs');\nconst {Transform} = require('stream');\nconst {DOMParser} = require('xmldom');\nconst Archiver = require('archiver');\nconst unzip = require('unzipper');\nconst streamifier = require('streamifier');\nconst tmp = require('tmp');\nconst StreamBuf = require('../../utils/stream-buf');\nconst RelType = require('../../xlsx/rel-type');\nconst StylesXform = require('../../xlsx/xform/style/styles-xform');\nconst SharedStrings = require('../../utils/shared-strings');\nconst DefinedNames = require('../../doc/defined-names');\n\nconst CoreXform = require('../../xlsx/xform/core/core-xform');\nconst RelationshipsXform = require('../../xlsx/xform/core/relationships-xform');\nconst ContentTypesXform = require('../../xlsx/xform/core/content-types-xform');\nconst AppXform = require('../../xlsx/xform/core/app-xform');\nconst WorkbookXform = require('../../xlsx/xform/book/workbook-xform');\nconst SharedStringsXform = require('../../xlsx/xform/strings/shared-strings-xform');\n\nconst WorksheetWriter = require('./worksheet-writer');\n\nconst theme1Xml = require('../../xlsx/xml/theme1.js');\n\nclass WorkbookWriter {\n  constructor(options) {\n    options = options || {};\n\n    this.created = options.created || new Date();\n    this.modified = options.modified || this.created;\n    this.creator = options.creator || 'ExcelJS';\n    this.lastModifiedBy = options.lastModifiedBy || 'ExcelJS';\n    this.lastPrinted = options.lastPrinted;\n\n    // using shared strings creates a smaller xlsx file but may use more memory\n    this.useSharedStrings = options.useSharedStrings || false;\n    this.sharedStrings = new SharedStrings();\n\n    // style manager\n    if (options.template) {\n      this.styles = new StylesXform(true);\n    } else {\n      this.styles = options.useStyles ? new StylesXform(true) : new StylesXform.Mock(true);\n    }\n\n    // defined names\n    this._definedNames = new DefinedNames();\n\n    this._worksheets = [];\n\n    this._tmpWorksheets = new Map();\n\n    this._cellStylesCache = new Map();\n\n    this.views = [];\n\n    this.zipOptions = options.zip;\n\n    this.media = [];\n    this.commentRefs = [];\n\n    if (options.template) {\n      this.templateBuf = options.template;\n      this.templateWrites = [];\n      this.templateInfo = {};\n      this.templateZip = unzip.Parse();\n    }\n\n    this.zip = Archiver('zip', this.zipOptions);\n    if (options.stream) {\n      this.stream = options.stream;\n    } else if (options.filename) {\n      this.stream = fs.createWriteStream(options.filename);\n    } else {\n      this.stream = new StreamBuf();\n    }\n    this.zip.pipe(this.stream);\n\n    if (options.template) {\n      this.promise = new Promise((resolve) => resolve());\n    } else {\n      // these bits can be added right now\n      this.promise = Promise.all([this.addThemes(), this.addOfficeRels()]);\n    }\n  }\n\n  get definedNames() {\n    return this._definedNames;\n  }\n\n  _getNextWorksheetId(name) {\n    let id;\n\n    if (this.templateInfo) {\n      const existingWorkSheet = this.templateInfo.sheets.find((s) => s.name === name);\n\n      if (existingWorkSheet) {\n        id = existingWorkSheet.sheetFileId;\n      } else {\n        id = this.nextId;\n      }\n    } else {\n      id = this.nextId;\n    }\n\n    return id;\n  }\n\n  _openStream(path, sheetId) {\n    const stream = new StreamBuf({bufSize: 65536, batch: true});\n    const isWorksheet = sheetId != null;\n\n    if (isWorksheet && this._tmpWorksheets.has(sheetId)) {\n      const tmpWorksheet = this._tmpWorksheets.get(sheetId);\n      tmpWorksheet.zipEntryPath = path;\n\n      const tmpWriteStream = fs.createWriteStream(tmpWorksheet.tmpPath);\n\n      tmpWorksheet.waitComplete = new Promise((resolve, reject) => {\n        tmpWriteStream.on('error', reject);\n        tmpWriteStream.on('finish', resolve);\n      });\n\n      stream.pipe(tmpWriteStream);\n    } else {\n      this.zip.append(stream, {name: path});\n    }\n\n    stream.on('finish', () => {\n      stream.emit('zipped');\n    });\n    return stream;\n  }\n\n  _commitWorksheets() {\n    const commitWorksheet = function(worksheet) {\n      if (!worksheet.committed) {\n        return new Promise(resolve => {\n          worksheet.stream.on('zipped', () => {\n            resolve();\n          });\n          worksheet.commit();\n        });\n      }\n      return Promise.resolve();\n    };\n    // if there are any uncommitted worksheets, commit them now and wait\n    const promises = this._worksheets.map(commitWorksheet);\n    if (promises.length) {\n      return Promise.all(promises);\n    }\n    return Promise.resolve();\n  }\n\n  async waitForTemplateParse() {\n    const templateStream = streamifier.createReadStream(this.templateBuf);\n    const files = {};\n    const pendingOperations = [];\n    const waitingWorkSheets = [];\n\n    await new Promise((resolve, reject) => {\n      this.templateZip.on('entry', (entry) => {\n        switch (entry.path) {\n          case '[Content_Types].xml':\n          case 'xl/styles.xml':\n          case 'xl/workbook.xml':\n          case 'xl/_rels/workbook.xml.rels':\n          case 'xl/calcChain.xml':\n            pendingOperations.push(parseXMLFile(files, entry));\n            break;\n          default:\n            if (entry.path.match(/xl\\/worksheets\\/sheet\\d+[.]xml/)) {\n              pendingOperations.push(new Promise((_resolve, _reject) => {\n                // eslint-disable-next-line consistent-return\n                tmp.file((err, tmpFilePath) => {\n                  if (err) { return reject(err); }\n\n                  const tempStream = fs.createWriteStream(tmpFilePath);\n\n                  waitingWorkSheets.push({\n                    ref: entry.path,\n                    path: tmpFilePath,\n                  });\n\n                  entry.on('error', _reject);\n                  tempStream.on('error', _reject);\n                  tempStream.on('finish', _resolve);\n\n                  entry.pipe(tempStream);\n                });\n              }));\n            } else {\n              this.templateWrites.push(new Promise(_resolve => {\n                this.zip.append(entry, {name: entry.path});\n                _resolve();\n              }));\n            }\n            break;\n        }\n      });\n\n      this.templateZip.on('close', () => {\n        resolve();\n      });\n\n      this.templateZip.on('error', reject);\n\n      templateStream.pipe(this.templateZip);\n    });\n\n    await Promise.all(pendingOperations);\n\n    this.templateInfo.filesDocuments = files;\n\n    const workbookDoc = this.templateInfo.filesDocuments['xl/workbook.xml'].doc;\n    const relsDoc = this.templateInfo.filesDocuments['xl/_rels/workbook.xml.rels'].doc;\n\n    let lastSheetId;\n    let lastSheetFileId;\n\n    const sheets = Array.from(workbookDoc.getElementsByTagName('sheet')).map((sheetNode) => {\n      const sheetId = parseInt(sheetNode.getAttribute('sheetId'), 10);\n      const rId = sheetNode.getAttribute('r:id');\n      const targetRNode = Array.from(relsDoc.getElementsByTagName('Relationship')).find((rNode) => rNode.getAttribute('Id') === rId);\n      const sheetFile = targetRNode.getAttribute('Target');\n      const sheetFileId = parseInt(sheetFile.match(/worksheets\\/sheet(\\d+)[.]xml/)[1], 10);\n      const sheetFileFound = waitingWorkSheets.find((w) => w.ref === `xl/worksheets/sheet${sheetFileId}.xml`);\n\n      if (lastSheetId == null || lastSheetId < sheetId) {\n        lastSheetId = sheetId;\n      }\n\n      if (lastSheetFileId == null || lastSheetFileId < sheetFileId) {\n        lastSheetFileId = sheetFileId;\n      }\n\n      return {\n        id: sheetId,\n        name: sheetNode.getAttribute('name'),\n        rId,\n        sheetFile,\n        sheetFileId,\n        sheetFileSrc: {\n          path: sheetFileFound.path,\n        },\n      };\n    });\n\n    // take existing styles from template as the base of new styles\n    await this.styles.parseStream(\n      streamifier.createReadStream(this.templateInfo.filesDocuments['xl/styles.xml'].originalSrc)\n    );\n\n    const lastWorkbookRelsId = Array.from(\n      relsDoc.getElementsByTagName('Relationship')\n    ).reduce((acu, relNode) => {\n      const rId = relNode.getAttribute('Id');\n      const rIdNumber = parseInt(rId.match(/rId(\\d+)/)[1], 10);\n\n      if (rIdNumber > acu) {\n        return rIdNumber;\n      }\n\n      return acu;\n    }, 0);\n\n    this.templateInfo.sheets = sheets;\n    this.templateInfo.lastSheetId = lastSheetId;\n    this.templateInfo.lastSheetFileId = lastSheetFileId;\n    this.templateInfo.lastWorkbookRelsId = lastWorkbookRelsId;\n  }\n\n  async commit() {\n    // commit all worksheets, then add suplimentary files\n    await this.promise;\n\n    if (this.templateWrites) {\n      await Promise.all(this.templateWrites);\n    }\n\n    await this.addMedia();\n\n    const newWorksheets = [];\n    const newWorksheetsColsWidth = new Map();\n\n    this._worksheets.forEach((w) => {\n      if (w == null) {\n        return;\n      }\n\n      // eslint-disable-next-line no-underscore-dangle\n      if (Array.isArray(w._columns)) {\n        // eslint-disable-next-line no-underscore-dangle\n        newWorksheetsColsWidth.set(w.id, w._columns.map((c) => {\n          return {\n            // eslint-disable-next-line no-underscore-dangle\n            number: c._number,\n            width: c.width,\n          };\n        }));\n      }\n\n      newWorksheets.push(w);\n    });\n\n    let replacedWorksheets = [];\n\n    if (this.templateInfo) {\n      this.templateInfo.sheets.forEach((sheet) => {\n        const existingWorksheetIndex = newWorksheets.findIndex((w) => w.name === sheet.name);\n\n        if (existingWorksheetIndex !== -1) {\n          sheet.replaced = true;\n          // eslint-disable-next-line no-underscore-dangle\n          sheet.calcCells = newWorksheets[existingWorksheetIndex]._calcCells;\n          newWorksheets.splice(existingWorksheetIndex, 1);\n          return;\n        }\n\n        this.zip.append(fs.createReadStream(sheet.sheetFileSrc.path), {\n          name: `xl/worksheets/sheet${sheet.sheetFileId}.xml`,\n        });\n      });\n\n      replacedWorksheets = this.templateInfo.sheets.filter(s => s.replaced === true);\n    }\n\n    await this._commitWorksheets();\n\n    if (this.templateInfo) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const [fileName, {doc: fileDoc, originalSrc}] of Object.entries(this.templateInfo.filesDocuments)) {\n        let content = originalSrc;\n\n        if (fileName === '[Content_Types].xml' && newWorksheets.length > 0) {\n          const sheetNodeRef = Array.from(\n            fileDoc.getElementsByTagName('Override')\n          ).find((node) => {\n            return node.getAttribute('PartName') === `/xl/worksheets/sheet${this.templateInfo.lastSheetFileId}.xml`;\n          });\n\n          // eslint-disable-next-line no-restricted-syntax\n          for (const newWorksheet of newWorksheets) {\n            const newWorkSheetRef = sheetNodeRef.cloneNode();\n            newWorkSheetRef.setAttribute('PartName', `/xl/worksheets/sheet${newWorksheet.id}.xml`);\n            sheetNodeRef.parentNode.insertBefore(newWorkSheetRef, sheetNodeRef.nextSibling);\n          }\n\n          content = fileDoc.toString();\n        } else if (fileName === 'xl/styles.xml') {\n          content = this.styles.xml;\n        } else if (fileName === 'xl/workbook.xml' && newWorksheets.length > 0) {\n          const sheetsNode = fileDoc.getElementsByTagName('sheets')[0];\n\n          for (let i = 0; i < newWorksheets.length; i++) {\n            const newWorksheet = newWorksheets[i];\n            const newSheetNode = fileDoc.createElement('sheet');\n            newSheetNode.setAttribute('name', newWorksheet.name);\n            newSheetNode.setAttribute('sheetId', this.templateInfo.lastSheetId + i + 1);\n            newSheetNode.setAttribute('r:id', `rId${this.templateInfo.lastWorkbookRelsId + i + 1}`);\n            sheetsNode.appendChild(newSheetNode);\n          }\n\n          content = fileDoc.toString();\n        } else if (fileName === 'xl/_rels/workbook.xml.rels' && newWorksheets.length > 0) {\n          const relationshipsNode = fileDoc.getElementsByTagName('Relationships')[0];\n\n          for (let i = 0; i < newWorksheets.length; i++) {\n            const newWorksheet = newWorksheets[i];\n            const newRelNode = fileDoc.createElement('Relationship');\n            newRelNode.setAttribute('Id', `rId${this.templateInfo.lastWorkbookRelsId + i + 1}`);\n            newRelNode.setAttribute('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet');\n            newRelNode.setAttribute('Target', `worksheets/sheet${newWorksheet.id}.xml`);\n            relationshipsNode.appendChild(newRelNode);\n          }\n\n          content = fileDoc.toString();\n        } else if (fileName === 'xl/calcChain.xml' && replacedWorksheets.length > 0) {\n          const calcChainNode = fileDoc.getElementsByTagName('calcChain')[0];\n          const cellRefNodes = Array.from(fileDoc.getElementsByTagName('c'));\n\n          const existingCalcCells = {};\n\n          cellRefNodes.forEach((cellRefNode) => {\n            const worksheetIndex = parseInt(cellRefNode.getAttribute('i'), 10);\n            const cellRef = cellRefNode.getAttribute('r');\n            const replacedWorksheetFound = replacedWorksheets.find(w => w.id === worksheetIndex);\n\n            if (!replacedWorksheetFound) {\n              return;\n            }\n\n            if (!replacedWorksheetFound.calcCells[cellRef]) {\n              cellRefNode.parentNode.removeChild(cellRefNode);\n            } else {\n              existingCalcCells[worksheetIndex] = existingCalcCells[worksheetIndex] || {};\n              existingCalcCells[worksheetIndex][cellRef] = true;\n            }\n          });\n\n          replacedWorksheets.forEach((replacedWorksheet) => {\n            const calcCellsInWorksheet = existingCalcCells[replacedWorksheet.id] || {};\n\n            // eslint-disable-next-line no-restricted-syntax\n            for (const [cellAddress] of Object.entries(replacedWorksheet.calcCells)) {\n              if (!calcCellsInWorksheet[cellAddress]) {\n                const newCellRef = fileDoc.createElement('c');\n                newCellRef.setAttribute('r', cellAddress);\n                newCellRef.setAttribute('i', replacedWorksheet.id);\n                calcChainNode.appendChild(newCellRef);\n              }\n            }\n          });\n\n          content = fileDoc.toString();\n        }\n\n        this.zip.append(content, {\n          name: fileName,\n        });\n      }\n    } else {\n      await Promise.all([\n        this.addContentTypes(),\n        this.addApp(),\n        this.addCore(),\n        this.addSharedStrings(),\n        this.addStyles(),\n        this.addWorkbookRels(),\n      ]);\n\n      await this.addWorkbook();\n    }\n\n    const tmpWorksheetCompletePromises = [];\n\n    this._tmpWorksheets.forEach((value) => {\n      tmpWorksheetCompletePromises.push(value.waitComplete);\n    });\n\n    await Promise.all(tmpWorksheetCompletePromises);\n\n    const worksheetsToCopy = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const [sheetId, tmpWorksheet] of this._tmpWorksheets.entries()) {\n      worksheetsToCopy.push({\n        sheetId,\n        tmpWorksheet,\n      });\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const w of worksheetsToCopy) {\n      const {sheetId, tmpWorksheet} = w;\n\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise((resolve, reject) => {\n        const worksheetStream = fs.createReadStream(tmpWorksheet.tmpPath);\n        const decoder = new StringDecoder('utf8');\n        let placeholderFound = false;\n\n        const distStream = new Transform({\n          transform: (chunk, enc, cb) => {\n            const chunkStr = decoder.write(chunk);\n\n            if (!placeholderFound && chunkStr.includes('$colsContent')) {\n              placeholderFound = true;\n              let colsXML = this._worksheets[sheetId].rawColsXML;\n\n              colsXML = colsXML.slice('<cols>'.length).slice(0, '</cols>'.length * -1);\n\n              cb(null, chunkStr.replace('$colsContent', colsXML));\n            } else {\n              cb(null, chunkStr);\n            }\n          },\n          flush: (cb) => {\n            const str = decoder.end();\n\n            if (str !== '') {\n              cb(null, str);\n            } else {\n              cb();\n            }\n          },\n        });\n\n        distStream.on('finish', resolve);\n        worksheetStream.on('error', reject);\n        distStream.on('error', reject);\n\n        this.zip.append(distStream, {\n          name: tmpWorksheet.zipEntryPath,\n        });\n\n        worksheetStream.pipe(distStream);\n      });\n    }\n\n    const result = await this._finalize();\n\n    return result;\n  }\n\n  get nextId() {\n    let id;\n    // find the next unique spot to add worksheet\n    let i;\n\n    for (i = 1; i < this._worksheets.length; i++) {\n      if (!this._worksheets[i]) {\n        id = i;\n        break;\n      }\n    }\n\n    if (id == null) {\n      id = this._worksheets.length || 1;\n    }\n\n    if (this.templateInfo && this.templateInfo.lastSheetFileId != null) {\n      return this.templateInfo.lastSheetFileId + id;\n    }\n\n    return id;\n  }\n\n  addImage(image) {\n    const id = this.media.length;\n    this.media.push(Object.assign({}, image, {type: 'image'}));\n    return id;\n  }\n\n  getImage(id) {\n    return this.media[id];\n  }\n\n  addWorksheet(name, options) {\n    // it's possible to add a worksheet with different than default\n    // shared string handling\n    // in fact, it's even possible to switch it mid-sheet\n    options = options || {};\n    const useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : this.useSharedStrings;\n\n    if (options.tabColor) {\n      // eslint-disable-next-line no-console\n      console.trace('tabColor option has moved to { properties: tabColor: {...} }');\n      options.properties = Object.assign(\n        {\n          tabColor: options.tabColor,\n        },\n        options.properties\n      );\n    }\n\n    let id;\n\n    if (options.id) {\n      // eslint-disable-next-line prefer-destructuring\n      id = options.id;\n      delete options.id;\n    } else {\n      id = this._getNextWorksheetId(name);\n    }\n\n    name = name || `sheet${id}`;\n\n    const worksheet = new WorksheetWriter({\n      id,\n      name,\n      workbook: this,\n      useSharedStrings,\n      properties: options.properties,\n      state: options.state,\n      pageSetup: options.pageSetup,\n      views: options.views,\n      autoFilter: options.autoFilter,\n    });\n\n    this._worksheets[id] = worksheet;\n    return worksheet;\n  }\n\n  async addWorksheetAsync(name, options) {\n    const id = this._getNextWorksheetId(name);\n\n    const tmpPath = await new Promise((resolve, reject) => {\n      // eslint-disable-next-line consistent-return\n      tmp.file((err, tmpFilePath) => {\n        if (err) { return reject(err); }\n        resolve(tmpFilePath);\n      });\n    });\n\n    this._tmpWorksheets.set(id, {\n      tmpPath,\n    });\n\n    return this.addWorksheet(name, {\n      ...options,\n      id,\n    });\n  }\n\n  getWorksheet(id) {\n    if (id === undefined) {\n      return this._worksheets.find(() => true);\n    }\n    if (typeof id === 'number') {\n      return this._worksheets[id];\n    }\n    if (typeof id === 'string') {\n      return this._worksheets.find(worksheet => worksheet && worksheet.name === id);\n    }\n    return undefined;\n  }\n\n  addStyles() {\n    return new Promise(resolve => {\n      this.zip.append(this.styles.xml, {name: 'xl/styles.xml'});\n      resolve();\n    });\n  }\n\n  addThemes() {\n    return new Promise(resolve => {\n      this.zip.append(theme1Xml, {name: 'xl/theme/theme1.xml'});\n      resolve();\n    });\n  }\n\n  addOfficeRels() {\n    return new Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml([\n        {Id: 'rId1', Type: RelType.OfficeDocument, Target: 'xl/workbook.xml'},\n        {Id: 'rId2', Type: RelType.CoreProperties, Target: 'docProps/core.xml'},\n        {Id: 'rId3', Type: RelType.ExtenderProperties, Target: 'docProps/app.xml'},\n      ]);\n      this.zip.append(xml, {name: '/_rels/.rels'});\n      resolve();\n    });\n  }\n\n  addContentTypes() {\n    return new Promise(resolve => {\n      const model = {\n        worksheets: this._worksheets.filter(Boolean),\n        sharedStrings: this.sharedStrings,\n        commentRefs: this.commentRefs,\n        media: this.media,\n      };\n      const xform = new ContentTypesXform();\n      const xml = xform.toXml(model);\n      this.zip.append(xml, {name: '[Content_Types].xml'});\n      resolve();\n    });\n  }\n\n  addMedia() {\n    return Promise.all(\n      this.media.map((medium, idx) => {\n        medium.name = `image${idx+1}.${medium.extension}`;\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}`;\n          if (medium.filename) {\n            return this.zip.file(medium.filename, {name: filename});\n          }\n          if (medium.buffer) {\n            return this.zip.append(medium.buffer, {name: filename});\n          }\n          if (medium.base64) {\n            const dataimg64 = medium.base64;\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n            return this.zip.append(content, {name: filename, base64: true});\n          }\n        }\n        throw new Error('Unsupported media');\n      })\n    );\n  }\n\n  addApp() {\n    return new Promise(resolve => {\n      const model = {\n        worksheets: this._worksheets.filter(Boolean),\n      };\n      const xform = new AppXform();\n      const xml = xform.toXml(model);\n      this.zip.append(xml, {name: 'docProps/app.xml'});\n      resolve();\n    });\n  }\n\n  addCore() {\n    return new Promise(resolve => {\n      const coreXform = new CoreXform();\n      const xml = coreXform.toXml(this);\n      this.zip.append(xml, {name: 'docProps/core.xml'});\n      resolve();\n    });\n  }\n\n  addSharedStrings() {\n    if (this.sharedStrings.count) {\n      return new Promise(resolve => {\n        const sharedStringsXform = new SharedStringsXform();\n        const xml = sharedStringsXform.toXml(this.sharedStrings);\n        this.zip.append(xml, {name: '/xl/sharedStrings.xml'});\n        resolve();\n      });\n    }\n    return Promise.resolve();\n  }\n\n  addWorkbookRels() {\n    let count = 1;\n    const relationships = [\n      {Id: `rId${count++}`, Type: RelType.Styles, Target: 'styles.xml'},\n      {Id: `rId${count++}`, Type: RelType.Theme, Target: 'theme/theme1.xml'},\n    ];\n    if (this.sharedStrings.count) {\n      relationships.push({Id: `rId${count++}`, Type: RelType.SharedStrings, Target: 'sharedStrings.xml'});\n    }\n    this._worksheets.forEach(worksheet => {\n      if (worksheet) {\n        worksheet.rId = `rId${count++}`;\n        relationships.push({Id: worksheet.rId, Type: RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml`});\n      }\n    });\n    return new Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml(relationships);\n      this.zip.append(xml, {name: '/xl/_rels/workbook.xml.rels'});\n      resolve();\n    });\n  }\n\n  addWorkbook() {\n    const {zip} = this;\n    const model = {\n      worksheets: this._worksheets.filter(Boolean),\n      definedNames: this._definedNames.model,\n      views: this.views,\n      properties: {},\n      calcProperties: {},\n    };\n\n    return new Promise(resolve => {\n      const xform = new WorkbookXform();\n      xform.prepare(model);\n      zip.append(xform.toXml(model), {name: '/xl/workbook.xml'});\n      resolve();\n    });\n  }\n\n  _finalize() {\n    return new Promise((resolve, reject) => {\n      this.stream.on('error', reject);\n      this.stream.on('finish', () => {\n        resolve(this);\n      });\n      this.zip.on('error', reject);\n\n      this.zip.finalize();\n    });\n  }\n}\n\nasync function parseXMLFile(files, entry) {\n  const xml = (await entry.buffer()).toString();\n  const doc = new DOMParser().parseFromString(xml);\n\n  files[entry.path] = {\n    originalSrc: xml,\n    doc,\n  };\n}\n\nmodule.exports = WorkbookWriter;\n"],"file":"workbook-writer.js"}