{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf-ext/databar-ext-xform.js"],"names":["BaseXform","require","CompositeXform","ColorXform","CfvoExtXform","DatabarExtXform","map","cfvoXform","borderColorXform","negativeBorderColorXform","negativeFillColorXform","axisColorXform","xmlStream","model","openNode","tag","minLength","toIntAttribute","maxLength","border","toBoolAttribute","gradient","negativeBarColorSameAsPositive","negativeBarBorderColorSameAsPositive","axisPosition","toAttribute","direction","cfvo","forEach","render","borderColor","negativeBorderColor","negativeFillColor","axisColor","closeNode","attributes","toIntValue","toBoolValue","toStringValue","name","parser","split","prop","push","rule","module","exports"],"mappings":"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","sourcesContent":["const BaseXform = require('../../base-xform');\nconst CompositeXform = require('../../composite-xform');\n\nconst ColorXform = require('../../style/color-xform');\nconst CfvoExtXform = require('./cfvo-ext-xform');\n\nclass DatabarExtXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'x14:cfvo': this.cfvoXform = new CfvoExtXform(),\n      'x14:borderColor': this.borderColorXform = new ColorXform('x14:borderColor'),\n      'x14:negativeBorderColor': this.negativeBorderColorXform = new ColorXform('x14:negativeBorderColor'),\n      'x14:negativeFillColor': this.negativeFillColorXform = new ColorXform('x14:negativeFillColor'),\n      'x14:axisColor': this.axisColorXform = new ColorXform('x14:axisColor'),\n    };\n  }\n\n  static isExt(rule) {\n    // not all databars need ext\n    // TODO: refine this\n    return !rule.gradient;\n  }\n\n  get tag() {\n    return 'x14:dataBar';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      minLength: BaseXform.toIntAttribute(model.minLength, 0, true),\n      maxLength: BaseXform.toIntAttribute(model.maxLength, 100, true),\n      border: BaseXform.toBoolAttribute(model.border, false),\n      gradient: BaseXform.toBoolAttribute(model.gradient, true),\n      negativeBarColorSameAsPositive: BaseXform.toBoolAttribute(model.negativeBarColorSameAsPositive, true),\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolAttribute(model.negativeBarBorderColorSameAsPositive, true),\n      axisPosition: BaseXform.toAttribute(model.axisPosition, 'auto'),\n      direction: BaseXform.toAttribute(model.direction, 'leftToRight'),\n    });\n\n    model.cfvo.forEach(cfvo => {\n      this.cfvoXform.render(xmlStream, cfvo);\n    });\n\n    this.borderColorXform.render(xmlStream, model.borderColor);\n    this.negativeBorderColorXform.render(xmlStream, model.negativeBorderColor);\n    this.negativeFillColorXform.render(xmlStream, model.negativeFillColor);\n    this.axisColorXform.render(xmlStream, model.axisColor);\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel({attributes}) {\n    return {\n      cfvo: [],\n      minLength: BaseXform.toIntValue(attributes.minLength, 0),\n      maxLength: BaseXform.toIntValue(attributes.maxLength, 100),\n      border: BaseXform.toBoolValue(attributes.border, false),\n      gradient: BaseXform.toBoolValue(attributes.gradient, true),\n      negativeBarColorSameAsPositive: BaseXform.toBoolValue(attributes.negativeBarColorSameAsPositive, true),\n      negativeBarBorderColorSameAsPositive: BaseXform.toBoolValue(attributes.negativeBarBorderColorSameAsPositive, true),\n      axisPosition: BaseXform.toStringValue(attributes.axisPosition, 'auto'),\n      direction: BaseXform.toStringValue(attributes.direction, 'leftToRight'),\n    };\n  }\n\n  onParserClose(name, parser) {\n    const [,prop] = name.split(':');\n    switch (prop) {\n      case 'cfvo':\n        this.model.cfvo.push(parser.model);\n        break;\n\n      default:\n        this.model[prop] = parser.model;\n        break;\n    }\n  }\n}\n\nmodule.exports = DatabarExtXform;\n"],"file":"databar-ext-xform.js"}